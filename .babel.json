{
  "{\"filename\":\"C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/cliEntry.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/cliEntry.js",
      "filenameRelative": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/cliEntry.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cliEntry.js",
      "sourceFileName": "cliEntry.js",
      "sourceRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cliEntry"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\n/**\n * If there's a newer version of react-native-git-upgrade in npm, suggest to the user to upgrade.\n */\nlet checkForUpdates = (() => {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      log.info('Check for updates');\n      const lastGitUpgradeVersion = yield exec('npm view react-native-git-upgrade@latest version');\n      const current = require('./package').version;\n      const latest = semver.clean(lastGitUpgradeVersion);\n      if (semver.gt(latest, current)) {\n        log.warn('A more recent version of \"react-native-git-upgrade\" has been found.\\n' + `Current: ${current}\\n` + `Latest: ${latest}\\n` + 'Please run \"npm install -g react-native-git-upgrade\"');\n      }\n    } catch (err) {\n      log.warn('Check for latest version failed', err.message);\n    }\n  });\n\n  return function checkForUpdates() {\n    return _ref.apply(this, arguments);\n  };\n})();\n\n/**\n * If true, use yarn instead of the npm client to upgrade the project.\n */\n\n\n/**\n * @param requestedVersion The version argument, e.g. 'react-native-git-upgrade 0.38'.\n *                         `undefined` if no argument passed.\n * @param cliArgs Additional arguments parsed using minimist.\n */\nlet run = (() => {\n  var _ref2 = _asyncToGenerator(function* (requestedVersion, cliArgs) {\n    const tmpDir = path.resolve(os.tmpdir(), 'react-native-git-upgrade');\n    const generatorDir = path.resolve(process.cwd(), 'node_modules', 'react-native', 'local-cli', 'generator');\n    let projectBackupCreated = false;\n\n    try {\n      yield checkForUpdates();\n\n      const useYarn = shouldUseYarn(cliArgs, path.resolve(process.cwd()));\n\n      log.info('Read package.json files');\n      const { reactNativeNodeModulesPak, reactNodeModulesPak, pak } = readPackageFiles(useYarn);\n      const appName = pak.name;\n      const currentVersion = reactNativeNodeModulesPak.version;\n      const currentReactVersion = reactNodeModulesPak.version;\n      const declaredVersion = pak.dependencies['react-native'];\n      const declaredReactVersion = pak.dependencies.react;\n\n      const verbose = cliArgs.verbose;\n\n      log.info('Check declared version');\n      checkDeclaredVersion(declaredVersion);\n\n      log.info('Check matching versions');\n      checkMatchingVersions(currentVersion, declaredVersion, useYarn);\n\n      log.info('Check React peer dependency');\n      checkReactPeerDependency(currentVersion, declaredReactVersion);\n\n      log.info('Check that Git is installed');\n      checkGitAvailable();\n\n      log.info('Get information from NPM registry');\n      const viewCommand = 'npm view react-native@' + (requestedVersion || 'latest') + ' --json';\n      const jsonOutput = yield exec(viewCommand, verbose);\n      const { newVersion, newReactVersionRange } = parseInformationJsonOutput(jsonOutput, requestedVersion);\n      // Print which versions we're upgrading to\n      log.info('Upgrading to React Native ' + newVersion + (newReactVersionRange ? ', React ' + newReactVersionRange : ''));\n\n      log.info('Setup temporary working directory');\n      yield setupWorkingDir(tmpDir);\n\n      log.info('Configure Git environment');\n      configureGitEnv(tmpDir);\n\n      log.info('Init Git repository');\n      yield exec('git init', verbose);\n\n      log.info('Add all files to commit');\n      yield exec('git add .', verbose);\n\n      log.info('Commit current project sources');\n      yield exec('git commit -m \"Project snapshot\"', verbose);\n\n      log.info('Create a tag before updating sources');\n      yield exec('git tag project-snapshot', verbose);\n      projectBackupCreated = true;\n\n      log.info('Generate old version template');\n      yield generateTemplates(generatorDir, appName, verbose);\n\n      log.info('Add updated files to commit');\n      yield exec('git add .', verbose);\n\n      log.info('Commit old version template');\n      yield exec('git commit -m \"Old version\" --allow-empty', verbose);\n\n      log.info('Install the new version');\n      let installCommand;\n      if (useYarn) {\n        installCommand = 'yarn add';\n      } else {\n        installCommand = 'npm install --save --color=always';\n      }\n      installCommand += ' react-native@' + newVersion;\n      if (newReactVersionRange && !semver.satisfies(currentReactVersion, newReactVersionRange)) {\n        // Install React as well to avoid unmet peer dependency\n        installCommand += ' react@' + newReactVersionRange;\n      }\n      yield exec(installCommand, verbose);\n\n      log.info('Generate new version template');\n      yield generateTemplates(generatorDir, appName, verbose);\n\n      log.info('Add updated files to commit');\n      yield exec('git add .', verbose);\n\n      log.info('Commit new version template');\n      yield exec('git commit -m \"New version\" --allow-empty', verbose);\n\n      log.info('Generate the patch between the 2 versions');\n      const diffOutput = yield exec('git diff --binary --no-color HEAD~1 HEAD', verbose);\n\n      log.info('Save the patch in temp directory');\n      const patchPath = path.resolve(tmpDir, `upgrade_${currentVersion}_${newVersion}.patch`);\n      fs.writeFileSync(patchPath, diffOutput);\n\n      log.info('Reset the 2 temporary commits');\n      yield exec('git reset HEAD~2 --hard', verbose);\n\n      try {\n        log.info('Apply the patch');\n        yield exec(`git apply --3way ${patchPath}`, true);\n      } catch (err) {\n        log.warn('The upgrade process succeeded but there might be conflicts to be resolved. ' + 'See above for the list of files that have merge conflicts.');\n      } finally {\n        log.info('Upgrade done');\n        if (cliArgs.verbose) {\n          log.info(`Temporary working directory: ${tmpDir}`);\n        }\n      }\n    } catch (err) {\n      log.error('An error occurred during upgrade:');\n      log.error(err.stack);\n      if (projectBackupCreated) {\n        log.error('Restore initial sources');\n        yield exec('git checkout project-snapshot', true);\n      }\n    }\n  });\n\n  return function run(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n})();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst fs = require('fs');\nconst os = require('os');\nconst assert = require('assert');\nconst path = require('path');\nconst shell = require('shelljs');\nconst Promise = require('promise');\nconst yeoman = require('yeoman-environment');\nconst TerminalAdapter = require('yeoman-environment/lib/adapter');\nconst log = require('npmlog');\nconst rimraf = require('rimraf');\nconst semver = require('semver');\nconst yarn = require('./yarn');\n\nconst {\n  checkDeclaredVersion,\n  checkMatchingVersions,\n  checkReactPeerDependency,\n  checkGitAvailable\n} = require('./checks');\n\nlog.heading = 'git-upgrade';\n\n/**\n * Promisify the callback-based shelljs function exec\n * @param logOutput If true, log the stdout of the command.\n * @returns {Promise}\n */\nfunction exec(command, logOutput) {\n  return new Promise((resolve, reject) => {\n    let stderr,\n        stdout = '';\n    const child = shell.exec(command, { async: true, silent: true });\n\n    child.stdout.on('data', data => {\n      stdout += data;\n      if (logOutput) {\n        process.stdout.write(data);\n      }\n    });\n\n    child.stderr.on('data', data => {\n      stderr += data;\n      process.stderr.write(data);\n    });\n\n    child.on('exit', code => {\n      code === 0 ? resolve(stdout) : reject(new Error(`Command '${command}' exited with code ${code}:\nstderr: ${stderr}\nstdout: ${stdout}`));\n    });\n  });\n}\n\nfunction parseJsonFile(path, useYarn) {\n  const installHint = useYarn ? 'Make sure you ran \"yarn\" and that you are inside a React Native project.' : 'Make sure you ran \"npm install\" and that you are inside a React Native project.';\n  let fileContents;\n  try {\n    fileContents = fs.readFileSync(path, 'utf8');\n  } catch (err) {\n    throw new Error('Cannot find \"' + path + '\". ' + installHint);\n  }\n  try {\n    return JSON.parse(fileContents);\n  } catch (err) {\n    throw new Error('Cannot parse \"' + path + '\": ' + err.message);\n  }\n}\n\nfunction readPackageFiles(useYarn) {\n  const reactNativeNodeModulesPakPath = path.resolve(process.cwd(), 'node_modules', 'react-native', 'package.json');\n  const reactNodeModulesPakPath = path.resolve(process.cwd(), 'node_modules', 'react', 'package.json');\n  const pakPath = path.resolve(process.cwd(), 'package.json');\n  return {\n    reactNativeNodeModulesPak: parseJsonFile(reactNativeNodeModulesPakPath),\n    reactNodeModulesPak: parseJsonFile(reactNodeModulesPakPath),\n    pak: parseJsonFile(pakPath)\n  };\n}\n\nfunction parseInformationJsonOutput(jsonOutput, requestedVersion) {\n  try {\n    const output = JSON.parse(jsonOutput);\n    const newVersion = output.version;\n    const peerDependencies = output.peerDependencies;\n    const newReactVersionRange = peerDependencies.react;\n\n    assert(semver.valid(newVersion));\n\n    return { newVersion, newReactVersionRange };\n  } catch (err) {\n    throw new Error('The specified version of React Native ' + requestedVersion + ' doesn\\'t exist.\\n' + 'Re-run the react-native-git-upgrade command with an existing version,\\n' + 'for example: \"react-native-git-upgrade 0.38.0\",\\n' + 'or without arguments to upgrade to the latest: \"react-native-git-upgrade\".');\n  }\n}\n\nfunction setupWorkingDir(tmpDir) {\n  return new Promise((resolve, reject) => {\n    rimraf(tmpDir, err => {\n      if (err) {\n        reject(err);\n      } else {\n        fs.mkdirSync(tmpDir);\n        resolve();\n      }\n    });\n  });\n}\n\nfunction configureGitEnv(tmpDir) {\n  /*\n   * The workflow inits a temporary Git repository. We don't want to interfere\n   * with an existing user's Git repository.\n   * Thanks to Git env vars, we can make Git use a different directory for its \".git\" folder.\n   * See https://git-scm.com/book/tr/v2/Git-Internals-Environment-Variables\n   */\n  process.env.GIT_DIR = path.resolve(tmpDir, '.gitrn');\n  process.env.GIT_WORK_TREE = '.';\n}\n\nfunction generateTemplates(generatorDir, appName, verbose) {\n  try {\n    const yeomanGeneratorEntryPoint = path.resolve(generatorDir, 'index.js');\n    // Try requiring the index.js (entry-point of Yeoman generators)\n    fs.accessSync(yeomanGeneratorEntryPoint);\n    return runYeomanGenerators(generatorDir, appName, verbose);\n  } catch (err) {\n    return runCopyAndReplace(generatorDir, appName);\n  }\n}\n\nfunction runCopyAndReplace(generatorDir, appName) {\n  const copyProjectTemplateAndReplacePath = path.resolve(generatorDir, 'copyProjectTemplateAndReplace');\n  /*\n   * This module is required twice during the process: for both old and new version\n   * of React Native.\n   * This file could have changed between these 2 versions. When generating the new template,\n   * we don't want to load the old version of the generator from the cache\n   */\n  delete require.cache[require.resolve(copyProjectTemplateAndReplacePath)];\n  const copyProjectTemplateAndReplace = require(copyProjectTemplateAndReplacePath);\n  copyProjectTemplateAndReplace(path.resolve(generatorDir, '..', 'templates', 'HelloWorld'), process.cwd(), appName, { upgrade: true, force: true });\n}\n\nfunction runYeomanGenerators(generatorDir, appName, verbose) {\n  if (!verbose) {\n    // Yeoman output needs monkey-patching (no silent option)\n    TerminalAdapter.prototype.log = () => {};\n    TerminalAdapter.prototype.log.force = () => {};\n    TerminalAdapter.prototype.log.create = () => {};\n  }\n\n  const env = yeoman.createEnv();\n  env.register(generatorDir, 'react:app');\n  const generatorArgs = ['react:app', appName];\n  return new Promise(resolve => env.run(generatorArgs, { upgrade: true, force: true }, resolve));\n}function shouldUseYarn(cliArgs, projectDir) {\n  if (cliArgs && cliArgs.npm) {\n    return false;\n  }\n  const yarnVersion = yarn.getYarnVersionIfAvailable();\n  if (yarnVersion && yarn.isProjectUsingYarn(projectDir)) {\n    log.info('Using yarn ' + yarnVersion);\n    return true;\n  }\n  return false;\n}\n\nmodule.exports = {\n  run: run\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaUVudHJ5LmpzIl0sIm5hbWVzIjpbImxvZyIsImluZm8iLCJsYXN0R2l0VXBncmFkZVZlcnNpb24iLCJleGVjIiwiY3VycmVudCIsInJlcXVpcmUiLCJ2ZXJzaW9uIiwibGF0ZXN0Iiwic2VtdmVyIiwiY2xlYW4iLCJndCIsIndhcm4iLCJlcnIiLCJtZXNzYWdlIiwiY2hlY2tGb3JVcGRhdGVzIiwicmVxdWVzdGVkVmVyc2lvbiIsImNsaUFyZ3MiLCJ0bXBEaXIiLCJwYXRoIiwicmVzb2x2ZSIsIm9zIiwidG1wZGlyIiwiZ2VuZXJhdG9yRGlyIiwicHJvY2VzcyIsImN3ZCIsInByb2plY3RCYWNrdXBDcmVhdGVkIiwidXNlWWFybiIsInNob3VsZFVzZVlhcm4iLCJyZWFjdE5hdGl2ZU5vZGVNb2R1bGVzUGFrIiwicmVhY3ROb2RlTW9kdWxlc1BhayIsInBhayIsInJlYWRQYWNrYWdlRmlsZXMiLCJhcHBOYW1lIiwibmFtZSIsImN1cnJlbnRWZXJzaW9uIiwiY3VycmVudFJlYWN0VmVyc2lvbiIsImRlY2xhcmVkVmVyc2lvbiIsImRlcGVuZGVuY2llcyIsImRlY2xhcmVkUmVhY3RWZXJzaW9uIiwicmVhY3QiLCJ2ZXJib3NlIiwiY2hlY2tEZWNsYXJlZFZlcnNpb24iLCJjaGVja01hdGNoaW5nVmVyc2lvbnMiLCJjaGVja1JlYWN0UGVlckRlcGVuZGVuY3kiLCJjaGVja0dpdEF2YWlsYWJsZSIsInZpZXdDb21tYW5kIiwianNvbk91dHB1dCIsIm5ld1ZlcnNpb24iLCJuZXdSZWFjdFZlcnNpb25SYW5nZSIsInBhcnNlSW5mb3JtYXRpb25Kc29uT3V0cHV0Iiwic2V0dXBXb3JraW5nRGlyIiwiY29uZmlndXJlR2l0RW52IiwiZ2VuZXJhdGVUZW1wbGF0ZXMiLCJpbnN0YWxsQ29tbWFuZCIsInNhdGlzZmllcyIsImRpZmZPdXRwdXQiLCJwYXRjaFBhdGgiLCJmcyIsIndyaXRlRmlsZVN5bmMiLCJlcnJvciIsInN0YWNrIiwicnVuIiwiYXNzZXJ0Iiwic2hlbGwiLCJQcm9taXNlIiwieWVvbWFuIiwiVGVybWluYWxBZGFwdGVyIiwicmltcmFmIiwieWFybiIsImhlYWRpbmciLCJjb21tYW5kIiwibG9nT3V0cHV0IiwicmVqZWN0Iiwic3RkZXJyIiwic3Rkb3V0IiwiY2hpbGQiLCJhc3luYyIsInNpbGVudCIsIm9uIiwiZGF0YSIsIndyaXRlIiwiY29kZSIsIkVycm9yIiwicGFyc2VKc29uRmlsZSIsImluc3RhbGxIaW50IiwiZmlsZUNvbnRlbnRzIiwicmVhZEZpbGVTeW5jIiwiSlNPTiIsInBhcnNlIiwicmVhY3ROYXRpdmVOb2RlTW9kdWxlc1Bha1BhdGgiLCJyZWFjdE5vZGVNb2R1bGVzUGFrUGF0aCIsInBha1BhdGgiLCJvdXRwdXQiLCJwZWVyRGVwZW5kZW5jaWVzIiwidmFsaWQiLCJta2RpclN5bmMiLCJlbnYiLCJHSVRfRElSIiwiR0lUX1dPUktfVFJFRSIsInllb21hbkdlbmVyYXRvckVudHJ5UG9pbnQiLCJhY2Nlc3NTeW5jIiwicnVuWWVvbWFuR2VuZXJhdG9ycyIsInJ1bkNvcHlBbmRSZXBsYWNlIiwiY29weVByb2plY3RUZW1wbGF0ZUFuZFJlcGxhY2VQYXRoIiwiY2FjaGUiLCJjb3B5UHJvamVjdFRlbXBsYXRlQW5kUmVwbGFjZSIsInVwZ3JhZGUiLCJmb3JjZSIsInByb3RvdHlwZSIsImNyZWF0ZSIsImNyZWF0ZUVudiIsInJlZ2lzdGVyIiwiZ2VuZXJhdG9yQXJncyIsInByb2plY3REaXIiLCJucG0iLCJ5YXJuVmVyc2lvbiIsImdldFlhcm5WZXJzaW9uSWZBdmFpbGFibGUiLCJpc1Byb2plY3RVc2luZ1lhcm4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFrTEE7Ozs7K0JBR0EsYUFBaUM7QUFDL0IsUUFBSTtBQUNGQSxVQUFJQyxJQUFKLENBQVMsbUJBQVQ7QUFDQSxZQUFNQyx3QkFBd0IsTUFBTUMsS0FBSyxrREFBTCxDQUFwQztBQUNBLFlBQU1DLFVBQVVDLFFBQVEsV0FBUixFQUFxQkMsT0FBckM7QUFDQSxZQUFNQyxTQUFTQyxPQUFPQyxLQUFQLENBQWFQLHFCQUFiLENBQWY7QUFDQSxVQUFJTSxPQUFPRSxFQUFQLENBQVVILE1BQVYsRUFBa0JILE9BQWxCLENBQUosRUFBZ0M7QUFDOUJKLFlBQUlXLElBQUosQ0FDRSwwRUFDQyxZQUFXUCxPQUFRLElBRHBCLEdBRUMsV0FBVUcsTUFBTyxJQUZsQixHQUdBLHNEQUpGO0FBTUQ7QUFDRixLQWJELENBYUUsT0FBT0ssR0FBUCxFQUFZO0FBQ1paLFVBQUlXLElBQUosQ0FBUyxpQ0FBVCxFQUE0Q0MsSUFBSUMsT0FBaEQ7QUFDRDtBQUNGLEc7O2tCQWpCY0MsZTs7Ozs7QUFtQmY7Ozs7O0FBZUE7Ozs7OztnQ0FLQSxXQUFtQkMsZ0JBQW5CLEVBQXFDQyxPQUFyQyxFQUE4QztBQUM1QyxVQUFNQyxTQUFTQyxLQUFLQyxPQUFMLENBQWFDLEdBQUdDLE1BQUgsRUFBYixFQUEwQiwwQkFBMUIsQ0FBZjtBQUNBLFVBQU1DLGVBQWVKLEtBQUtDLE9BQUwsQ0FBYUksUUFBUUMsR0FBUixFQUFiLEVBQTRCLGNBQTVCLEVBQTRDLGNBQTVDLEVBQTRELFdBQTVELEVBQXlFLFdBQXpFLENBQXJCO0FBQ0EsUUFBSUMsdUJBQXVCLEtBQTNCOztBQUVBLFFBQUk7QUFDRixZQUFNWCxpQkFBTjs7QUFFQSxZQUFNWSxVQUFVQyxjQUFjWCxPQUFkLEVBQXVCRSxLQUFLQyxPQUFMLENBQWFJLFFBQVFDLEdBQVIsRUFBYixDQUF2QixDQUFoQjs7QUFFQXhCLFVBQUlDLElBQUosQ0FBUyx5QkFBVDtBQUNBLFlBQU0sRUFBQzJCLHlCQUFELEVBQTRCQyxtQkFBNUIsRUFBaURDLEdBQWpELEtBQXdEQyxpQkFBaUJMLE9BQWpCLENBQTlEO0FBQ0EsWUFBTU0sVUFBVUYsSUFBSUcsSUFBcEI7QUFDQSxZQUFNQyxpQkFBaUJOLDBCQUEwQnRCLE9BQWpEO0FBQ0EsWUFBTTZCLHNCQUFzQk4sb0JBQW9CdkIsT0FBaEQ7QUFDQSxZQUFNOEIsa0JBQWtCTixJQUFJTyxZQUFKLENBQWlCLGNBQWpCLENBQXhCO0FBQ0EsWUFBTUMsdUJBQXVCUixJQUFJTyxZQUFKLENBQWlCRSxLQUE5Qzs7QUFFQSxZQUFNQyxVQUFVeEIsUUFBUXdCLE9BQXhCOztBQUVBeEMsVUFBSUMsSUFBSixDQUFTLHdCQUFUO0FBQ0F3QywyQkFBcUJMLGVBQXJCOztBQUVBcEMsVUFBSUMsSUFBSixDQUFTLHlCQUFUO0FBQ0F5Qyw0QkFBc0JSLGNBQXRCLEVBQXNDRSxlQUF0QyxFQUF1RFYsT0FBdkQ7O0FBRUExQixVQUFJQyxJQUFKLENBQVMsNkJBQVQ7QUFDQTBDLCtCQUF5QlQsY0FBekIsRUFBeUNJLG9CQUF6Qzs7QUFFQXRDLFVBQUlDLElBQUosQ0FBUyw2QkFBVDtBQUNBMkM7O0FBRUE1QyxVQUFJQyxJQUFKLENBQVMsbUNBQVQ7QUFDQSxZQUFNNEMsY0FBYyw0QkFBNEI5QixvQkFBb0IsUUFBaEQsSUFBNEQsU0FBaEY7QUFDQSxZQUFNK0IsYUFBYSxNQUFNM0MsS0FBSzBDLFdBQUwsRUFBa0JMLE9BQWxCLENBQXpCO0FBQ0EsWUFBTSxFQUFDTyxVQUFELEVBQWFDLG9CQUFiLEtBQXFDQywyQkFBMkJILFVBQTNCLEVBQXVDL0IsZ0JBQXZDLENBQTNDO0FBQ0E7QUFDQWYsVUFBSUMsSUFBSixDQUFTLCtCQUErQjhDLFVBQS9CLElBQTZDQyx1QkFBdUIsYUFBYUEsb0JBQXBDLEdBQTJELEVBQXhHLENBQVQ7O0FBRUFoRCxVQUFJQyxJQUFKLENBQVMsbUNBQVQ7QUFDQSxZQUFNaUQsZ0JBQWdCakMsTUFBaEIsQ0FBTjs7QUFFQWpCLFVBQUlDLElBQUosQ0FBUywyQkFBVDtBQUNBa0Qsc0JBQWdCbEMsTUFBaEI7O0FBRUFqQixVQUFJQyxJQUFKLENBQVMscUJBQVQ7QUFDQSxZQUFNRSxLQUFLLFVBQUwsRUFBaUJxQyxPQUFqQixDQUFOOztBQUVBeEMsVUFBSUMsSUFBSixDQUFTLHlCQUFUO0FBQ0EsWUFBTUUsS0FBSyxXQUFMLEVBQWtCcUMsT0FBbEIsQ0FBTjs7QUFFQXhDLFVBQUlDLElBQUosQ0FBUyxnQ0FBVDtBQUNBLFlBQU1FLEtBQUssa0NBQUwsRUFBeUNxQyxPQUF6QyxDQUFOOztBQUVBeEMsVUFBSUMsSUFBSixDQUFVLHNDQUFWO0FBQ0EsWUFBTUUsS0FBSywwQkFBTCxFQUFpQ3FDLE9BQWpDLENBQU47QUFDQWYsNkJBQXVCLElBQXZCOztBQUVBekIsVUFBSUMsSUFBSixDQUFTLCtCQUFUO0FBQ0EsWUFBTW1ELGtCQUFrQjlCLFlBQWxCLEVBQWdDVSxPQUFoQyxFQUF5Q1EsT0FBekMsQ0FBTjs7QUFFQXhDLFVBQUlDLElBQUosQ0FBUyw2QkFBVDtBQUNBLFlBQU1FLEtBQUssV0FBTCxFQUFrQnFDLE9BQWxCLENBQU47O0FBRUF4QyxVQUFJQyxJQUFKLENBQVMsNkJBQVQ7QUFDQSxZQUFNRSxLQUFLLDJDQUFMLEVBQWtEcUMsT0FBbEQsQ0FBTjs7QUFFQXhDLFVBQUlDLElBQUosQ0FBUyx5QkFBVDtBQUNBLFVBQUlvRCxjQUFKO0FBQ0EsVUFBSTNCLE9BQUosRUFBYTtBQUNYMkIseUJBQWlCLFVBQWpCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xBLHlCQUFpQixtQ0FBakI7QUFDRDtBQUNEQSx3QkFBa0IsbUJBQW1CTixVQUFyQztBQUNBLFVBQUlDLHdCQUF3QixDQUFDeEMsT0FBTzhDLFNBQVAsQ0FBaUJuQixtQkFBakIsRUFBc0NhLG9CQUF0QyxDQUE3QixFQUEwRjtBQUN4RjtBQUNBSywwQkFBa0IsWUFBWUwsb0JBQTlCO0FBQ0Q7QUFDRCxZQUFNN0MsS0FBS2tELGNBQUwsRUFBcUJiLE9BQXJCLENBQU47O0FBRUF4QyxVQUFJQyxJQUFKLENBQVMsK0JBQVQ7QUFDQSxZQUFNbUQsa0JBQWtCOUIsWUFBbEIsRUFBZ0NVLE9BQWhDLEVBQXlDUSxPQUF6QyxDQUFOOztBQUVBeEMsVUFBSUMsSUFBSixDQUFTLDZCQUFUO0FBQ0EsWUFBTUUsS0FBSyxXQUFMLEVBQWtCcUMsT0FBbEIsQ0FBTjs7QUFFQXhDLFVBQUlDLElBQUosQ0FBUyw2QkFBVDtBQUNBLFlBQU1FLEtBQUssMkNBQUwsRUFBa0RxQyxPQUFsRCxDQUFOOztBQUVBeEMsVUFBSUMsSUFBSixDQUFTLDJDQUFUO0FBQ0EsWUFBTXNELGFBQWEsTUFBTXBELEtBQUssMENBQUwsRUFBaURxQyxPQUFqRCxDQUF6Qjs7QUFFQXhDLFVBQUlDLElBQUosQ0FBUyxrQ0FBVDtBQUNBLFlBQU11RCxZQUFZdEMsS0FBS0MsT0FBTCxDQUFhRixNQUFiLEVBQXNCLFdBQVVpQixjQUFlLElBQUdhLFVBQVcsUUFBN0QsQ0FBbEI7QUFDQVUsU0FBR0MsYUFBSCxDQUFpQkYsU0FBakIsRUFBNEJELFVBQTVCOztBQUVBdkQsVUFBSUMsSUFBSixDQUFTLCtCQUFUO0FBQ0EsWUFBTUUsS0FBSyx5QkFBTCxFQUFnQ3FDLE9BQWhDLENBQU47O0FBRUEsVUFBSTtBQUNGeEMsWUFBSUMsSUFBSixDQUFTLGlCQUFUO0FBQ0EsY0FBTUUsS0FBTSxvQkFBbUJxRCxTQUFVLEVBQW5DLEVBQXNDLElBQXRDLENBQU47QUFDRCxPQUhELENBR0UsT0FBTzVDLEdBQVAsRUFBWTtBQUNaWixZQUFJVyxJQUFKLENBQ0UsZ0ZBQ0EsNERBRkY7QUFHRCxPQVBELFNBT1U7QUFDUlgsWUFBSUMsSUFBSixDQUFTLGNBQVQ7QUFDQSxZQUFJZSxRQUFRd0IsT0FBWixFQUFxQjtBQUNuQnhDLGNBQUlDLElBQUosQ0FBVSxnQ0FBK0JnQixNQUFPLEVBQWhEO0FBQ0Q7QUFDRjtBQUVGLEtBN0dELENBNkdFLE9BQU9MLEdBQVAsRUFBWTtBQUNaWixVQUFJMkQsS0FBSixDQUFVLG1DQUFWO0FBQ0EzRCxVQUFJMkQsS0FBSixDQUFVL0MsSUFBSWdELEtBQWQ7QUFDQSxVQUFJbkMsb0JBQUosRUFBMEI7QUFDeEJ6QixZQUFJMkQsS0FBSixDQUFVLHlCQUFWO0FBQ0EsY0FBTXhELEtBQUssK0JBQUwsRUFBc0MsSUFBdEMsQ0FBTjtBQUNEO0FBQ0Y7QUFDRixHOztrQkExSGMwRCxHOzs7Ozs7O0FBMU5mLE1BQU1KLEtBQUtwRCxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1lLEtBQUtmLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTXlELFNBQVN6RCxRQUFRLFFBQVIsQ0FBZjtBQUNBLE1BQU1hLE9BQU9iLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTTBELFFBQVExRCxRQUFRLFNBQVIsQ0FBZDtBQUNBLE1BQU0yRCxVQUFVM0QsUUFBUSxTQUFSLENBQWhCO0FBQ0EsTUFBTTRELFNBQVM1RCxRQUFRLG9CQUFSLENBQWY7QUFDQSxNQUFNNkQsa0JBQWtCN0QsUUFBUSxnQ0FBUixDQUF4QjtBQUNBLE1BQU1MLE1BQU1LLFFBQVEsUUFBUixDQUFaO0FBQ0EsTUFBTThELFNBQVM5RCxRQUFRLFFBQVIsQ0FBZjtBQUNBLE1BQU1HLFNBQVNILFFBQVEsUUFBUixDQUFmO0FBQ0EsTUFBTStELE9BQU8vRCxRQUFRLFFBQVIsQ0FBYjs7QUFFQSxNQUFNO0FBQ0pvQyxzQkFESTtBQUVKQyx1QkFGSTtBQUdKQywwQkFISTtBQUlKQztBQUpJLElBS0Z2QyxRQUFRLFVBQVIsQ0FMSjs7QUFPQUwsSUFBSXFFLE9BQUosR0FBYyxhQUFkOztBQUVBOzs7OztBQUtBLFNBQVNsRSxJQUFULENBQWNtRSxPQUFkLEVBQXVCQyxTQUF2QixFQUFrQztBQUNoQyxTQUFPLElBQUlQLE9BQUosQ0FBWSxDQUFDN0MsT0FBRCxFQUFVcUQsTUFBVixLQUFxQjtBQUN0QyxRQUFJQyxNQUFKO0FBQUEsUUFBWUMsU0FBUyxFQUFyQjtBQUNBLFVBQU1DLFFBQVFaLE1BQU01RCxJQUFOLENBQVdtRSxPQUFYLEVBQW9CLEVBQUNNLE9BQU8sSUFBUixFQUFjQyxRQUFRLElBQXRCLEVBQXBCLENBQWQ7O0FBRUFGLFVBQU1ELE1BQU4sQ0FBYUksRUFBYixDQUFnQixNQUFoQixFQUF3QkMsUUFBUTtBQUM5QkwsZ0JBQVVLLElBQVY7QUFDQSxVQUFJUixTQUFKLEVBQWU7QUFDYmhELGdCQUFRbUQsTUFBUixDQUFlTSxLQUFmLENBQXFCRCxJQUFyQjtBQUNEO0FBQ0YsS0FMRDs7QUFPQUosVUFBTUYsTUFBTixDQUFhSyxFQUFiLENBQWdCLE1BQWhCLEVBQXdCQyxRQUFRO0FBQzlCTixnQkFBVU0sSUFBVjtBQUNBeEQsY0FBUWtELE1BQVIsQ0FBZU8sS0FBZixDQUFxQkQsSUFBckI7QUFDRCxLQUhEOztBQUtBSixVQUFNRyxFQUFOLENBQVMsTUFBVCxFQUFpQkcsUUFBUTtBQUN0QkEsZUFBUyxDQUFWLEdBQ0k5RCxRQUFRdUQsTUFBUixDQURKLEdBRUlGLE9BQU8sSUFBSVUsS0FBSixDQUFXLFlBQVdaLE9BQVEsc0JBQXFCVyxJQUFLO1VBQy9EUixNQUFPO1VBQ1BDLE1BQU8sRUFGQSxDQUFQLENBRko7QUFLRCxLQU5EO0FBT0QsR0F2Qk0sQ0FBUDtBQXdCRDs7QUFFRCxTQUFTUyxhQUFULENBQXVCakUsSUFBdkIsRUFBNkJRLE9BQTdCLEVBQXNDO0FBQ3BDLFFBQU0wRCxjQUFjMUQsVUFDbEIsMEVBRGtCLEdBRWxCLGlGQUZGO0FBR0EsTUFBSTJELFlBQUo7QUFDQSxNQUFJO0FBQ0ZBLG1CQUFlNUIsR0FBRzZCLFlBQUgsQ0FBZ0JwRSxJQUFoQixFQUFzQixNQUF0QixDQUFmO0FBQ0QsR0FGRCxDQUVFLE9BQU9OLEdBQVAsRUFBWTtBQUNaLFVBQU0sSUFBSXNFLEtBQUosQ0FBVSxrQkFBa0JoRSxJQUFsQixHQUF5QixLQUF6QixHQUFpQ2tFLFdBQTNDLENBQU47QUFDRDtBQUNELE1BQUk7QUFDRixXQUFPRyxLQUFLQyxLQUFMLENBQVdILFlBQVgsQ0FBUDtBQUNELEdBRkQsQ0FFRSxPQUFPekUsR0FBUCxFQUFZO0FBQ1osVUFBTSxJQUFJc0UsS0FBSixDQUFVLG1CQUFtQmhFLElBQW5CLEdBQTBCLEtBQTFCLEdBQWtDTixJQUFJQyxPQUFoRCxDQUFOO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTa0IsZ0JBQVQsQ0FBMEJMLE9BQTFCLEVBQW1DO0FBQ2pDLFFBQU0rRCxnQ0FBZ0N2RSxLQUFLQyxPQUFMLENBQ3BDSSxRQUFRQyxHQUFSLEVBRG9DLEVBQ3JCLGNBRHFCLEVBQ0wsY0FESyxFQUNXLGNBRFgsQ0FBdEM7QUFHQSxRQUFNa0UsMEJBQTBCeEUsS0FBS0MsT0FBTCxDQUM5QkksUUFBUUMsR0FBUixFQUQ4QixFQUNmLGNBRGUsRUFDQyxPQURELEVBQ1UsY0FEVixDQUFoQztBQUdBLFFBQU1tRSxVQUFVekUsS0FBS0MsT0FBTCxDQUNkSSxRQUFRQyxHQUFSLEVBRGMsRUFDQyxjQURELENBQWhCO0FBR0EsU0FBTztBQUNMSSwrQkFBMkJ1RCxjQUFjTSw2QkFBZCxDQUR0QjtBQUVMNUQseUJBQXFCc0QsY0FBY08sdUJBQWQsQ0FGaEI7QUFHTDVELFNBQUtxRCxjQUFjUSxPQUFkO0FBSEEsR0FBUDtBQUtEOztBQUVELFNBQVMxQywwQkFBVCxDQUFvQ0gsVUFBcEMsRUFBZ0QvQixnQkFBaEQsRUFBa0U7QUFDaEUsTUFBSTtBQUNGLFVBQU02RSxTQUFTTCxLQUFLQyxLQUFMLENBQVcxQyxVQUFYLENBQWY7QUFDQSxVQUFNQyxhQUFhNkMsT0FBT3RGLE9BQTFCO0FBQ0EsVUFBTXVGLG1CQUFtQkQsT0FBT0MsZ0JBQWhDO0FBQ0EsVUFBTTdDLHVCQUF1QjZDLGlCQUFpQnRELEtBQTlDOztBQUVBdUIsV0FBT3RELE9BQU9zRixLQUFQLENBQWEvQyxVQUFiLENBQVA7O0FBRUEsV0FBTyxFQUFDQSxVQUFELEVBQWFDLG9CQUFiLEVBQVA7QUFDRCxHQVRELENBU0UsT0FBT3BDLEdBQVAsRUFBWTtBQUNaLFVBQU0sSUFBSXNFLEtBQUosQ0FDSiwyQ0FBMkNuRSxnQkFBM0MsR0FBOEQsb0JBQTlELEdBQ0EseUVBREEsR0FFQSxtREFGQSxHQUdBLDRFQUpJLENBQU47QUFNRDtBQUNGOztBQUdELFNBQVNtQyxlQUFULENBQXlCakMsTUFBekIsRUFBaUM7QUFDL0IsU0FBTyxJQUFJK0MsT0FBSixDQUFZLENBQUM3QyxPQUFELEVBQVVxRCxNQUFWLEtBQXFCO0FBQ3RDTCxXQUFPbEQsTUFBUCxFQUFlTCxPQUFPO0FBQ3BCLFVBQUlBLEdBQUosRUFBUztBQUNQNEQsZUFBTzVELEdBQVA7QUFDRCxPQUZELE1BRU87QUFDTDZDLFdBQUdzQyxTQUFILENBQWE5RSxNQUFiO0FBQ0FFO0FBQ0Q7QUFDRixLQVBEO0FBUUQsR0FUTSxDQUFQO0FBVUQ7O0FBRUQsU0FBU2dDLGVBQVQsQ0FBeUJsQyxNQUF6QixFQUFpQztBQUMvQjs7Ozs7O0FBTUFNLFVBQVF5RSxHQUFSLENBQVlDLE9BQVosR0FBc0IvRSxLQUFLQyxPQUFMLENBQWFGLE1BQWIsRUFBcUIsUUFBckIsQ0FBdEI7QUFDQU0sVUFBUXlFLEdBQVIsQ0FBWUUsYUFBWixHQUE0QixHQUE1QjtBQUNEOztBQUVELFNBQVM5QyxpQkFBVCxDQUEyQjlCLFlBQTNCLEVBQXlDVSxPQUF6QyxFQUFrRFEsT0FBbEQsRUFBMkQ7QUFDekQsTUFBSTtBQUNGLFVBQU0yRCw0QkFBNEJqRixLQUFLQyxPQUFMLENBQWFHLFlBQWIsRUFBMkIsVUFBM0IsQ0FBbEM7QUFDQTtBQUNBbUMsT0FBRzJDLFVBQUgsQ0FBY0QseUJBQWQ7QUFDQSxXQUFPRSxvQkFBb0IvRSxZQUFwQixFQUFrQ1UsT0FBbEMsRUFBMkNRLE9BQTNDLENBQVA7QUFDRCxHQUxELENBS0UsT0FBTTVCLEdBQU4sRUFBVztBQUNYLFdBQU8wRixrQkFBa0JoRixZQUFsQixFQUFnQ1UsT0FBaEMsQ0FBUDtBQUNEO0FBQ0Y7O0FBRUQsU0FBU3NFLGlCQUFULENBQTJCaEYsWUFBM0IsRUFBeUNVLE9BQXpDLEVBQWtEO0FBQ2hELFFBQU11RSxvQ0FBb0NyRixLQUFLQyxPQUFMLENBQWFHLFlBQWIsRUFBMkIsK0JBQTNCLENBQTFDO0FBQ0E7Ozs7OztBQU1BLFNBQU9qQixRQUFRbUcsS0FBUixDQUFjbkcsUUFBUWMsT0FBUixDQUFnQm9GLGlDQUFoQixDQUFkLENBQVA7QUFDQSxRQUFNRSxnQ0FBZ0NwRyxRQUFRa0csaUNBQVIsQ0FBdEM7QUFDQUUsZ0NBQ0V2RixLQUFLQyxPQUFMLENBQWFHLFlBQWIsRUFBMkIsSUFBM0IsRUFBaUMsV0FBakMsRUFBOEMsWUFBOUMsQ0FERixFQUVFQyxRQUFRQyxHQUFSLEVBRkYsRUFHRVEsT0FIRixFQUlFLEVBQUMwRSxTQUFTLElBQVYsRUFBZ0JDLE9BQU8sSUFBdkIsRUFKRjtBQU1EOztBQUVELFNBQVNOLG1CQUFULENBQTZCL0UsWUFBN0IsRUFBMkNVLE9BQTNDLEVBQW9EUSxPQUFwRCxFQUE2RDtBQUMzRCxNQUFJLENBQUNBLE9BQUwsRUFBYztBQUNaO0FBQ0EwQixvQkFBZ0IwQyxTQUFoQixDQUEwQjVHLEdBQTFCLEdBQWdDLE1BQU0sQ0FBRSxDQUF4QztBQUNBa0Usb0JBQWdCMEMsU0FBaEIsQ0FBMEI1RyxHQUExQixDQUE4QjJHLEtBQTlCLEdBQXNDLE1BQU0sQ0FBRSxDQUE5QztBQUNBekMsb0JBQWdCMEMsU0FBaEIsQ0FBMEI1RyxHQUExQixDQUE4QjZHLE1BQTlCLEdBQXVDLE1BQU0sQ0FBRSxDQUEvQztBQUNEOztBQUVELFFBQU1iLE1BQU0vQixPQUFPNkMsU0FBUCxFQUFaO0FBQ0FkLE1BQUllLFFBQUosQ0FBYXpGLFlBQWIsRUFBMkIsV0FBM0I7QUFDQSxRQUFNMEYsZ0JBQWdCLENBQUMsV0FBRCxFQUFjaEYsT0FBZCxDQUF0QjtBQUNBLFNBQU8sSUFBSWdDLE9BQUosQ0FBYTdDLE9BQUQsSUFBYTZFLElBQUluQyxHQUFKLENBQVFtRCxhQUFSLEVBQXVCLEVBQUNOLFNBQVMsSUFBVixFQUFnQkMsT0FBTyxJQUF2QixFQUF2QixFQUFxRHhGLE9BQXJELENBQXpCLENBQVA7QUFDRCxDQTJCRCxTQUFTUSxhQUFULENBQXVCWCxPQUF2QixFQUFnQ2lHLFVBQWhDLEVBQTRDO0FBQzFDLE1BQUlqRyxXQUFXQSxRQUFRa0csR0FBdkIsRUFBNEI7QUFDMUIsV0FBTyxLQUFQO0FBQ0Q7QUFDRCxRQUFNQyxjQUFjL0MsS0FBS2dELHlCQUFMLEVBQXBCO0FBQ0EsTUFBSUQsZUFBZS9DLEtBQUtpRCxrQkFBTCxDQUF3QkosVUFBeEIsQ0FBbkIsRUFBd0Q7QUFDdERqSCxRQUFJQyxJQUFKLENBQVMsZ0JBQWdCa0gsV0FBekI7QUFDQSxXQUFPLElBQVA7QUFDRDtBQUNELFNBQU8sS0FBUDtBQUNEOztBQW1JREcsT0FBT0MsT0FBUCxHQUFpQjtBQUNmMUQsT0FBS0E7QUFEVSxDQUFqQiIsImZpbGUiOiJjbGlFbnRyeS5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9kamp3L0FwcERhdGEvUm9hbWluZy9ucG0vbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS1naXQtdXBncmFkZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBvcyA9IHJlcXVpcmUoJ29zJyk7XG5jb25zdCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBzaGVsbCA9IHJlcXVpcmUoJ3NoZWxsanMnKTtcbmNvbnN0IFByb21pc2UgPSByZXF1aXJlKCdwcm9taXNlJyk7XG5jb25zdCB5ZW9tYW4gPSByZXF1aXJlKCd5ZW9tYW4tZW52aXJvbm1lbnQnKTtcbmNvbnN0IFRlcm1pbmFsQWRhcHRlciA9IHJlcXVpcmUoJ3llb21hbi1lbnZpcm9ubWVudC9saWIvYWRhcHRlcicpO1xuY29uc3QgbG9nID0gcmVxdWlyZSgnbnBtbG9nJyk7XG5jb25zdCByaW1yYWYgPSByZXF1aXJlKCdyaW1yYWYnKTtcbmNvbnN0IHNlbXZlciA9IHJlcXVpcmUoJ3NlbXZlcicpO1xuY29uc3QgeWFybiA9IHJlcXVpcmUoJy4veWFybicpO1xuXG5jb25zdCB7XG4gIGNoZWNrRGVjbGFyZWRWZXJzaW9uLFxuICBjaGVja01hdGNoaW5nVmVyc2lvbnMsXG4gIGNoZWNrUmVhY3RQZWVyRGVwZW5kZW5jeSxcbiAgY2hlY2tHaXRBdmFpbGFibGUsXG59ID0gcmVxdWlyZSgnLi9jaGVja3MnKTtcblxubG9nLmhlYWRpbmcgPSAnZ2l0LXVwZ3JhZGUnO1xuXG4vKipcbiAqIFByb21pc2lmeSB0aGUgY2FsbGJhY2stYmFzZWQgc2hlbGxqcyBmdW5jdGlvbiBleGVjXG4gKiBAcGFyYW0gbG9nT3V0cHV0IElmIHRydWUsIGxvZyB0aGUgc3Rkb3V0IG9mIHRoZSBjb21tYW5kLlxuICogQHJldHVybnMge1Byb21pc2V9XG4gKi9cbmZ1bmN0aW9uIGV4ZWMoY29tbWFuZCwgbG9nT3V0cHV0KSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgbGV0IHN0ZGVyciwgc3Rkb3V0ID0gJyc7XG4gICAgY29uc3QgY2hpbGQgPSBzaGVsbC5leGVjKGNvbW1hbmQsIHthc3luYzogdHJ1ZSwgc2lsZW50OiB0cnVlfSk7XG5cbiAgICBjaGlsZC5zdGRvdXQub24oJ2RhdGEnLCBkYXRhID0+IHtcbiAgICAgIHN0ZG91dCArPSBkYXRhO1xuICAgICAgaWYgKGxvZ091dHB1dCkge1xuICAgICAgICBwcm9jZXNzLnN0ZG91dC53cml0ZShkYXRhKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGNoaWxkLnN0ZGVyci5vbignZGF0YScsIGRhdGEgPT4ge1xuICAgICAgc3RkZXJyICs9IGRhdGE7XG4gICAgICBwcm9jZXNzLnN0ZGVyci53cml0ZShkYXRhKTtcbiAgICB9KTtcblxuICAgIGNoaWxkLm9uKCdleGl0JywgY29kZSA9PiB7XG4gICAgICAoY29kZSA9PT0gMClcbiAgICAgICAgPyByZXNvbHZlKHN0ZG91dClcbiAgICAgICAgOiByZWplY3QobmV3IEVycm9yKGBDb21tYW5kICcke2NvbW1hbmR9JyBleGl0ZWQgd2l0aCBjb2RlICR7Y29kZX06XG5zdGRlcnI6ICR7c3RkZXJyfVxuc3Rkb3V0OiAke3N0ZG91dH1gKSk7XG4gICAgfSk7XG4gIH0pXG59XG5cbmZ1bmN0aW9uIHBhcnNlSnNvbkZpbGUocGF0aCwgdXNlWWFybikge1xuICBjb25zdCBpbnN0YWxsSGludCA9IHVzZVlhcm4gP1xuICAgICdNYWtlIHN1cmUgeW91IHJhbiBcInlhcm5cIiBhbmQgdGhhdCB5b3UgYXJlIGluc2lkZSBhIFJlYWN0IE5hdGl2ZSBwcm9qZWN0LicgOlxuICAgICdNYWtlIHN1cmUgeW91IHJhbiBcIm5wbSBpbnN0YWxsXCIgYW5kIHRoYXQgeW91IGFyZSBpbnNpZGUgYSBSZWFjdCBOYXRpdmUgcHJvamVjdC4nO1xuICBsZXQgZmlsZUNvbnRlbnRzO1xuICB0cnkge1xuICAgIGZpbGVDb250ZW50cyA9IGZzLnJlYWRGaWxlU3luYyhwYXRoLCAndXRmOCcpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBmaW5kIFwiJyArIHBhdGggKyAnXCIuICcgKyBpbnN0YWxsSGludCk7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShmaWxlQ29udGVudHMpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBwYXJzZSBcIicgKyBwYXRoICsgJ1wiOiAnICsgZXJyLm1lc3NhZ2UpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlYWRQYWNrYWdlRmlsZXModXNlWWFybikge1xuICBjb25zdCByZWFjdE5hdGl2ZU5vZGVNb2R1bGVzUGFrUGF0aCA9IHBhdGgucmVzb2x2ZShcbiAgICBwcm9jZXNzLmN3ZCgpLCAnbm9kZV9tb2R1bGVzJywgJ3JlYWN0LW5hdGl2ZScsICdwYWNrYWdlLmpzb24nXG4gICk7XG4gIGNvbnN0IHJlYWN0Tm9kZU1vZHVsZXNQYWtQYXRoID0gcGF0aC5yZXNvbHZlKFxuICAgIHByb2Nlc3MuY3dkKCksICdub2RlX21vZHVsZXMnLCAncmVhY3QnLCAncGFja2FnZS5qc29uJ1xuICApO1xuICBjb25zdCBwYWtQYXRoID0gcGF0aC5yZXNvbHZlKFxuICAgIHByb2Nlc3MuY3dkKCksICdwYWNrYWdlLmpzb24nXG4gICk7XG4gIHJldHVybiB7XG4gICAgcmVhY3ROYXRpdmVOb2RlTW9kdWxlc1BhazogcGFyc2VKc29uRmlsZShyZWFjdE5hdGl2ZU5vZGVNb2R1bGVzUGFrUGF0aCksXG4gICAgcmVhY3ROb2RlTW9kdWxlc1BhazogcGFyc2VKc29uRmlsZShyZWFjdE5vZGVNb2R1bGVzUGFrUGF0aCksXG4gICAgcGFrOiBwYXJzZUpzb25GaWxlKHBha1BhdGgpXG4gIH1cbn1cblxuZnVuY3Rpb24gcGFyc2VJbmZvcm1hdGlvbkpzb25PdXRwdXQoanNvbk91dHB1dCwgcmVxdWVzdGVkVmVyc2lvbikge1xuICB0cnkge1xuICAgIGNvbnN0IG91dHB1dCA9IEpTT04ucGFyc2UoanNvbk91dHB1dCk7XG4gICAgY29uc3QgbmV3VmVyc2lvbiA9IG91dHB1dC52ZXJzaW9uO1xuICAgIGNvbnN0IHBlZXJEZXBlbmRlbmNpZXMgPSBvdXRwdXQucGVlckRlcGVuZGVuY2llcztcbiAgICBjb25zdCBuZXdSZWFjdFZlcnNpb25SYW5nZSA9IHBlZXJEZXBlbmRlbmNpZXMucmVhY3Q7XG5cbiAgICBhc3NlcnQoc2VtdmVyLnZhbGlkKG5ld1ZlcnNpb24pKTtcblxuICAgIHJldHVybiB7bmV3VmVyc2lvbiwgbmV3UmVhY3RWZXJzaW9uUmFuZ2V9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdUaGUgc3BlY2lmaWVkIHZlcnNpb24gb2YgUmVhY3QgTmF0aXZlICcgKyByZXF1ZXN0ZWRWZXJzaW9uICsgJyBkb2VzblxcJ3QgZXhpc3QuXFxuJyArXG4gICAgICAnUmUtcnVuIHRoZSByZWFjdC1uYXRpdmUtZ2l0LXVwZ3JhZGUgY29tbWFuZCB3aXRoIGFuIGV4aXN0aW5nIHZlcnNpb24sXFxuJyArXG4gICAgICAnZm9yIGV4YW1wbGU6IFwicmVhY3QtbmF0aXZlLWdpdC11cGdyYWRlIDAuMzguMFwiLFxcbicgK1xuICAgICAgJ29yIHdpdGhvdXQgYXJndW1lbnRzIHRvIHVwZ3JhZGUgdG8gdGhlIGxhdGVzdDogXCJyZWFjdC1uYXRpdmUtZ2l0LXVwZ3JhZGVcIi4nXG4gICAgKTtcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIHNldHVwV29ya2luZ0Rpcih0bXBEaXIpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICByaW1yYWYodG1wRGlyLCBlcnIgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZzLm1rZGlyU3luYyh0bXBEaXIpO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjb25maWd1cmVHaXRFbnYodG1wRGlyKSB7XG4gIC8qXG4gICAqIFRoZSB3b3JrZmxvdyBpbml0cyBhIHRlbXBvcmFyeSBHaXQgcmVwb3NpdG9yeS4gV2UgZG9uJ3Qgd2FudCB0byBpbnRlcmZlcmVcbiAgICogd2l0aCBhbiBleGlzdGluZyB1c2VyJ3MgR2l0IHJlcG9zaXRvcnkuXG4gICAqIFRoYW5rcyB0byBHaXQgZW52IHZhcnMsIHdlIGNhbiBtYWtlIEdpdCB1c2UgYSBkaWZmZXJlbnQgZGlyZWN0b3J5IGZvciBpdHMgXCIuZ2l0XCIgZm9sZGVyLlxuICAgKiBTZWUgaHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3RyL3YyL0dpdC1JbnRlcm5hbHMtRW52aXJvbm1lbnQtVmFyaWFibGVzXG4gICAqL1xuICBwcm9jZXNzLmVudi5HSVRfRElSID0gcGF0aC5yZXNvbHZlKHRtcERpciwgJy5naXRybicpO1xuICBwcm9jZXNzLmVudi5HSVRfV09SS19UUkVFID0gJy4nO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVRlbXBsYXRlcyhnZW5lcmF0b3JEaXIsIGFwcE5hbWUsIHZlcmJvc2UpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB5ZW9tYW5HZW5lcmF0b3JFbnRyeVBvaW50ID0gcGF0aC5yZXNvbHZlKGdlbmVyYXRvckRpciwgJ2luZGV4LmpzJyk7XG4gICAgLy8gVHJ5IHJlcXVpcmluZyB0aGUgaW5kZXguanMgKGVudHJ5LXBvaW50IG9mIFllb21hbiBnZW5lcmF0b3JzKVxuICAgIGZzLmFjY2Vzc1N5bmMoeWVvbWFuR2VuZXJhdG9yRW50cnlQb2ludCk7XG4gICAgcmV0dXJuIHJ1blllb21hbkdlbmVyYXRvcnMoZ2VuZXJhdG9yRGlyLCBhcHBOYW1lLCB2ZXJib3NlKTtcbiAgfSBjYXRjaChlcnIpIHtcbiAgICByZXR1cm4gcnVuQ29weUFuZFJlcGxhY2UoZ2VuZXJhdG9yRGlyLCBhcHBOYW1lKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBydW5Db3B5QW5kUmVwbGFjZShnZW5lcmF0b3JEaXIsIGFwcE5hbWUpIHtcbiAgY29uc3QgY29weVByb2plY3RUZW1wbGF0ZUFuZFJlcGxhY2VQYXRoID0gcGF0aC5yZXNvbHZlKGdlbmVyYXRvckRpciwgJ2NvcHlQcm9qZWN0VGVtcGxhdGVBbmRSZXBsYWNlJyk7XG4gIC8qXG4gICAqIFRoaXMgbW9kdWxlIGlzIHJlcXVpcmVkIHR3aWNlIGR1cmluZyB0aGUgcHJvY2VzczogZm9yIGJvdGggb2xkIGFuZCBuZXcgdmVyc2lvblxuICAgKiBvZiBSZWFjdCBOYXRpdmUuXG4gICAqIFRoaXMgZmlsZSBjb3VsZCBoYXZlIGNoYW5nZWQgYmV0d2VlbiB0aGVzZSAyIHZlcnNpb25zLiBXaGVuIGdlbmVyYXRpbmcgdGhlIG5ldyB0ZW1wbGF0ZSxcbiAgICogd2UgZG9uJ3Qgd2FudCB0byBsb2FkIHRoZSBvbGQgdmVyc2lvbiBvZiB0aGUgZ2VuZXJhdG9yIGZyb20gdGhlIGNhY2hlXG4gICAqL1xuICBkZWxldGUgcmVxdWlyZS5jYWNoZVtyZXF1aXJlLnJlc29sdmUoY29weVByb2plY3RUZW1wbGF0ZUFuZFJlcGxhY2VQYXRoKV07XG4gIGNvbnN0IGNvcHlQcm9qZWN0VGVtcGxhdGVBbmRSZXBsYWNlID0gcmVxdWlyZShjb3B5UHJvamVjdFRlbXBsYXRlQW5kUmVwbGFjZVBhdGgpO1xuICBjb3B5UHJvamVjdFRlbXBsYXRlQW5kUmVwbGFjZShcbiAgICBwYXRoLnJlc29sdmUoZ2VuZXJhdG9yRGlyLCAnLi4nLCAndGVtcGxhdGVzJywgJ0hlbGxvV29ybGQnKSxcbiAgICBwcm9jZXNzLmN3ZCgpLFxuICAgIGFwcE5hbWUsXG4gICAge3VwZ3JhZGU6IHRydWUsIGZvcmNlOiB0cnVlfVxuICApO1xufVxuXG5mdW5jdGlvbiBydW5ZZW9tYW5HZW5lcmF0b3JzKGdlbmVyYXRvckRpciwgYXBwTmFtZSwgdmVyYm9zZSkge1xuICBpZiAoIXZlcmJvc2UpIHtcbiAgICAvLyBZZW9tYW4gb3V0cHV0IG5lZWRzIG1vbmtleS1wYXRjaGluZyAobm8gc2lsZW50IG9wdGlvbilcbiAgICBUZXJtaW5hbEFkYXB0ZXIucHJvdG90eXBlLmxvZyA9ICgpID0+IHt9O1xuICAgIFRlcm1pbmFsQWRhcHRlci5wcm90b3R5cGUubG9nLmZvcmNlID0gKCkgPT4ge307XG4gICAgVGVybWluYWxBZGFwdGVyLnByb3RvdHlwZS5sb2cuY3JlYXRlID0gKCkgPT4ge307XG4gIH1cblxuICBjb25zdCBlbnYgPSB5ZW9tYW4uY3JlYXRlRW52KCk7XG4gIGVudi5yZWdpc3RlcihnZW5lcmF0b3JEaXIsICdyZWFjdDphcHAnKTtcbiAgY29uc3QgZ2VuZXJhdG9yQXJncyA9IFsncmVhY3Q6YXBwJywgYXBwTmFtZV07XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gZW52LnJ1bihnZW5lcmF0b3JBcmdzLCB7dXBncmFkZTogdHJ1ZSwgZm9yY2U6IHRydWV9LCByZXNvbHZlKSk7XG59XG5cbi8qKlxuICogSWYgdGhlcmUncyBhIG5ld2VyIHZlcnNpb24gb2YgcmVhY3QtbmF0aXZlLWdpdC11cGdyYWRlIGluIG5wbSwgc3VnZ2VzdCB0byB0aGUgdXNlciB0byB1cGdyYWRlLlxuICovXG5hc3luYyBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gIHRyeSB7XG4gICAgbG9nLmluZm8oJ0NoZWNrIGZvciB1cGRhdGVzJyk7XG4gICAgY29uc3QgbGFzdEdpdFVwZ3JhZGVWZXJzaW9uID0gYXdhaXQgZXhlYygnbnBtIHZpZXcgcmVhY3QtbmF0aXZlLWdpdC11cGdyYWRlQGxhdGVzdCB2ZXJzaW9uJyk7XG4gICAgY29uc3QgY3VycmVudCA9IHJlcXVpcmUoJy4vcGFja2FnZScpLnZlcnNpb247XG4gICAgY29uc3QgbGF0ZXN0ID0gc2VtdmVyLmNsZWFuKGxhc3RHaXRVcGdyYWRlVmVyc2lvbik7XG4gICAgaWYgKHNlbXZlci5ndChsYXRlc3QsIGN1cnJlbnQpKSB7XG4gICAgICBsb2cud2FybihcbiAgICAgICAgJ0EgbW9yZSByZWNlbnQgdmVyc2lvbiBvZiBcInJlYWN0LW5hdGl2ZS1naXQtdXBncmFkZVwiIGhhcyBiZWVuIGZvdW5kLlxcbicgK1xuICAgICAgICBgQ3VycmVudDogJHtjdXJyZW50fVxcbmAgK1xuICAgICAgICBgTGF0ZXN0OiAke2xhdGVzdH1cXG5gICtcbiAgICAgICAgJ1BsZWFzZSBydW4gXCJucG0gaW5zdGFsbCAtZyByZWFjdC1uYXRpdmUtZ2l0LXVwZ3JhZGVcIidcbiAgICAgICk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBsb2cud2FybignQ2hlY2sgZm9yIGxhdGVzdCB2ZXJzaW9uIGZhaWxlZCcsIGVyci5tZXNzYWdlKTtcbiAgfVxufVxuXG4vKipcbiAqIElmIHRydWUsIHVzZSB5YXJuIGluc3RlYWQgb2YgdGhlIG5wbSBjbGllbnQgdG8gdXBncmFkZSB0aGUgcHJvamVjdC5cbiAqL1xuZnVuY3Rpb24gc2hvdWxkVXNlWWFybihjbGlBcmdzLCBwcm9qZWN0RGlyKSB7XG4gIGlmIChjbGlBcmdzICYmIGNsaUFyZ3MubnBtKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IHlhcm5WZXJzaW9uID0geWFybi5nZXRZYXJuVmVyc2lvbklmQXZhaWxhYmxlKCk7XG4gIGlmICh5YXJuVmVyc2lvbiAmJiB5YXJuLmlzUHJvamVjdFVzaW5nWWFybihwcm9qZWN0RGlyKSkge1xuICAgIGxvZy5pbmZvKCdVc2luZyB5YXJuICcgKyB5YXJuVmVyc2lvbik7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIEBwYXJhbSByZXF1ZXN0ZWRWZXJzaW9uIFRoZSB2ZXJzaW9uIGFyZ3VtZW50LCBlLmcuICdyZWFjdC1uYXRpdmUtZ2l0LXVwZ3JhZGUgMC4zOCcuXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICBgdW5kZWZpbmVkYCBpZiBubyBhcmd1bWVudCBwYXNzZWQuXG4gKiBAcGFyYW0gY2xpQXJncyBBZGRpdGlvbmFsIGFyZ3VtZW50cyBwYXJzZWQgdXNpbmcgbWluaW1pc3QuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHJ1bihyZXF1ZXN0ZWRWZXJzaW9uLCBjbGlBcmdzKSB7XG4gIGNvbnN0IHRtcERpciA9IHBhdGgucmVzb2x2ZShvcy50bXBkaXIoKSwgJ3JlYWN0LW5hdGl2ZS1naXQtdXBncmFkZScpO1xuICBjb25zdCBnZW5lcmF0b3JEaXIgPSBwYXRoLnJlc29sdmUocHJvY2Vzcy5jd2QoKSwgJ25vZGVfbW9kdWxlcycsICdyZWFjdC1uYXRpdmUnLCAnbG9jYWwtY2xpJywgJ2dlbmVyYXRvcicpO1xuICBsZXQgcHJvamVjdEJhY2t1cENyZWF0ZWQgPSBmYWxzZTtcblxuICB0cnkge1xuICAgIGF3YWl0IGNoZWNrRm9yVXBkYXRlcygpO1xuXG4gICAgY29uc3QgdXNlWWFybiA9IHNob3VsZFVzZVlhcm4oY2xpQXJncywgcGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCkpKTtcblxuICAgIGxvZy5pbmZvKCdSZWFkIHBhY2thZ2UuanNvbiBmaWxlcycpO1xuICAgIGNvbnN0IHtyZWFjdE5hdGl2ZU5vZGVNb2R1bGVzUGFrLCByZWFjdE5vZGVNb2R1bGVzUGFrLCBwYWt9ID0gcmVhZFBhY2thZ2VGaWxlcyh1c2VZYXJuKTtcbiAgICBjb25zdCBhcHBOYW1lID0gcGFrLm5hbWU7XG4gICAgY29uc3QgY3VycmVudFZlcnNpb24gPSByZWFjdE5hdGl2ZU5vZGVNb2R1bGVzUGFrLnZlcnNpb247XG4gICAgY29uc3QgY3VycmVudFJlYWN0VmVyc2lvbiA9IHJlYWN0Tm9kZU1vZHVsZXNQYWsudmVyc2lvbjtcbiAgICBjb25zdCBkZWNsYXJlZFZlcnNpb24gPSBwYWsuZGVwZW5kZW5jaWVzWydyZWFjdC1uYXRpdmUnXTtcbiAgICBjb25zdCBkZWNsYXJlZFJlYWN0VmVyc2lvbiA9IHBhay5kZXBlbmRlbmNpZXMucmVhY3Q7XG5cbiAgICBjb25zdCB2ZXJib3NlID0gY2xpQXJncy52ZXJib3NlO1xuXG4gICAgbG9nLmluZm8oJ0NoZWNrIGRlY2xhcmVkIHZlcnNpb24nKTtcbiAgICBjaGVja0RlY2xhcmVkVmVyc2lvbihkZWNsYXJlZFZlcnNpb24pO1xuXG4gICAgbG9nLmluZm8oJ0NoZWNrIG1hdGNoaW5nIHZlcnNpb25zJyk7XG4gICAgY2hlY2tNYXRjaGluZ1ZlcnNpb25zKGN1cnJlbnRWZXJzaW9uLCBkZWNsYXJlZFZlcnNpb24sIHVzZVlhcm4pO1xuXG4gICAgbG9nLmluZm8oJ0NoZWNrIFJlYWN0IHBlZXIgZGVwZW5kZW5jeScpO1xuICAgIGNoZWNrUmVhY3RQZWVyRGVwZW5kZW5jeShjdXJyZW50VmVyc2lvbiwgZGVjbGFyZWRSZWFjdFZlcnNpb24pO1xuXG4gICAgbG9nLmluZm8oJ0NoZWNrIHRoYXQgR2l0IGlzIGluc3RhbGxlZCcpO1xuICAgIGNoZWNrR2l0QXZhaWxhYmxlKCk7XG5cbiAgICBsb2cuaW5mbygnR2V0IGluZm9ybWF0aW9uIGZyb20gTlBNIHJlZ2lzdHJ5Jyk7XG4gICAgY29uc3Qgdmlld0NvbW1hbmQgPSAnbnBtIHZpZXcgcmVhY3QtbmF0aXZlQCcgKyAocmVxdWVzdGVkVmVyc2lvbiB8fCAnbGF0ZXN0JykgKyAnIC0tanNvbic7XG4gICAgY29uc3QganNvbk91dHB1dCA9IGF3YWl0IGV4ZWModmlld0NvbW1hbmQsIHZlcmJvc2UpO1xuICAgIGNvbnN0IHtuZXdWZXJzaW9uLCBuZXdSZWFjdFZlcnNpb25SYW5nZX0gPSBwYXJzZUluZm9ybWF0aW9uSnNvbk91dHB1dChqc29uT3V0cHV0LCByZXF1ZXN0ZWRWZXJzaW9uKTtcbiAgICAvLyBQcmludCB3aGljaCB2ZXJzaW9ucyB3ZSdyZSB1cGdyYWRpbmcgdG9cbiAgICBsb2cuaW5mbygnVXBncmFkaW5nIHRvIFJlYWN0IE5hdGl2ZSAnICsgbmV3VmVyc2lvbiArIChuZXdSZWFjdFZlcnNpb25SYW5nZSA/ICcsIFJlYWN0ICcgKyBuZXdSZWFjdFZlcnNpb25SYW5nZSA6ICcnKSk7XG5cbiAgICBsb2cuaW5mbygnU2V0dXAgdGVtcG9yYXJ5IHdvcmtpbmcgZGlyZWN0b3J5Jyk7XG4gICAgYXdhaXQgc2V0dXBXb3JraW5nRGlyKHRtcERpcik7XG5cbiAgICBsb2cuaW5mbygnQ29uZmlndXJlIEdpdCBlbnZpcm9ubWVudCcpO1xuICAgIGNvbmZpZ3VyZUdpdEVudih0bXBEaXIpO1xuXG4gICAgbG9nLmluZm8oJ0luaXQgR2l0IHJlcG9zaXRvcnknKTtcbiAgICBhd2FpdCBleGVjKCdnaXQgaW5pdCcsIHZlcmJvc2UpO1xuXG4gICAgbG9nLmluZm8oJ0FkZCBhbGwgZmlsZXMgdG8gY29tbWl0Jyk7XG4gICAgYXdhaXQgZXhlYygnZ2l0IGFkZCAuJywgdmVyYm9zZSk7XG5cbiAgICBsb2cuaW5mbygnQ29tbWl0IGN1cnJlbnQgcHJvamVjdCBzb3VyY2VzJyk7XG4gICAgYXdhaXQgZXhlYygnZ2l0IGNvbW1pdCAtbSBcIlByb2plY3Qgc25hcHNob3RcIicsIHZlcmJvc2UpO1xuXG4gICAgbG9nLmluZm8gKCdDcmVhdGUgYSB0YWcgYmVmb3JlIHVwZGF0aW5nIHNvdXJjZXMnKTtcbiAgICBhd2FpdCBleGVjKCdnaXQgdGFnIHByb2plY3Qtc25hcHNob3QnLCB2ZXJib3NlKTtcbiAgICBwcm9qZWN0QmFja3VwQ3JlYXRlZCA9IHRydWU7XG5cbiAgICBsb2cuaW5mbygnR2VuZXJhdGUgb2xkIHZlcnNpb24gdGVtcGxhdGUnKTtcbiAgICBhd2FpdCBnZW5lcmF0ZVRlbXBsYXRlcyhnZW5lcmF0b3JEaXIsIGFwcE5hbWUsIHZlcmJvc2UpO1xuXG4gICAgbG9nLmluZm8oJ0FkZCB1cGRhdGVkIGZpbGVzIHRvIGNvbW1pdCcpO1xuICAgIGF3YWl0IGV4ZWMoJ2dpdCBhZGQgLicsIHZlcmJvc2UpO1xuXG4gICAgbG9nLmluZm8oJ0NvbW1pdCBvbGQgdmVyc2lvbiB0ZW1wbGF0ZScpO1xuICAgIGF3YWl0IGV4ZWMoJ2dpdCBjb21taXQgLW0gXCJPbGQgdmVyc2lvblwiIC0tYWxsb3ctZW1wdHknLCB2ZXJib3NlKTtcblxuICAgIGxvZy5pbmZvKCdJbnN0YWxsIHRoZSBuZXcgdmVyc2lvbicpO1xuICAgIGxldCBpbnN0YWxsQ29tbWFuZDtcbiAgICBpZiAodXNlWWFybikge1xuICAgICAgaW5zdGFsbENvbW1hbmQgPSAneWFybiBhZGQnO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnN0YWxsQ29tbWFuZCA9ICducG0gaW5zdGFsbCAtLXNhdmUgLS1jb2xvcj1hbHdheXMnO1xuICAgIH1cbiAgICBpbnN0YWxsQ29tbWFuZCArPSAnIHJlYWN0LW5hdGl2ZUAnICsgbmV3VmVyc2lvbjtcbiAgICBpZiAobmV3UmVhY3RWZXJzaW9uUmFuZ2UgJiYgIXNlbXZlci5zYXRpc2ZpZXMoY3VycmVudFJlYWN0VmVyc2lvbiwgbmV3UmVhY3RWZXJzaW9uUmFuZ2UpKSB7XG4gICAgICAvLyBJbnN0YWxsIFJlYWN0IGFzIHdlbGwgdG8gYXZvaWQgdW5tZXQgcGVlciBkZXBlbmRlbmN5XG4gICAgICBpbnN0YWxsQ29tbWFuZCArPSAnIHJlYWN0QCcgKyBuZXdSZWFjdFZlcnNpb25SYW5nZTtcbiAgICB9XG4gICAgYXdhaXQgZXhlYyhpbnN0YWxsQ29tbWFuZCwgdmVyYm9zZSk7XG5cbiAgICBsb2cuaW5mbygnR2VuZXJhdGUgbmV3IHZlcnNpb24gdGVtcGxhdGUnKTtcbiAgICBhd2FpdCBnZW5lcmF0ZVRlbXBsYXRlcyhnZW5lcmF0b3JEaXIsIGFwcE5hbWUsIHZlcmJvc2UpO1xuXG4gICAgbG9nLmluZm8oJ0FkZCB1cGRhdGVkIGZpbGVzIHRvIGNvbW1pdCcpO1xuICAgIGF3YWl0IGV4ZWMoJ2dpdCBhZGQgLicsIHZlcmJvc2UpO1xuXG4gICAgbG9nLmluZm8oJ0NvbW1pdCBuZXcgdmVyc2lvbiB0ZW1wbGF0ZScpO1xuICAgIGF3YWl0IGV4ZWMoJ2dpdCBjb21taXQgLW0gXCJOZXcgdmVyc2lvblwiIC0tYWxsb3ctZW1wdHknLCB2ZXJib3NlKTtcblxuICAgIGxvZy5pbmZvKCdHZW5lcmF0ZSB0aGUgcGF0Y2ggYmV0d2VlbiB0aGUgMiB2ZXJzaW9ucycpO1xuICAgIGNvbnN0IGRpZmZPdXRwdXQgPSBhd2FpdCBleGVjKCdnaXQgZGlmZiAtLWJpbmFyeSAtLW5vLWNvbG9yIEhFQUR+MSBIRUFEJywgdmVyYm9zZSk7XG5cbiAgICBsb2cuaW5mbygnU2F2ZSB0aGUgcGF0Y2ggaW4gdGVtcCBkaXJlY3RvcnknKTtcbiAgICBjb25zdCBwYXRjaFBhdGggPSBwYXRoLnJlc29sdmUodG1wRGlyLCBgdXBncmFkZV8ke2N1cnJlbnRWZXJzaW9ufV8ke25ld1ZlcnNpb259LnBhdGNoYCk7XG4gICAgZnMud3JpdGVGaWxlU3luYyhwYXRjaFBhdGgsIGRpZmZPdXRwdXQpO1xuXG4gICAgbG9nLmluZm8oJ1Jlc2V0IHRoZSAyIHRlbXBvcmFyeSBjb21taXRzJyk7XG4gICAgYXdhaXQgZXhlYygnZ2l0IHJlc2V0IEhFQUR+MiAtLWhhcmQnLCB2ZXJib3NlKTtcblxuICAgIHRyeSB7XG4gICAgICBsb2cuaW5mbygnQXBwbHkgdGhlIHBhdGNoJyk7XG4gICAgICBhd2FpdCBleGVjKGBnaXQgYXBwbHkgLS0zd2F5ICR7cGF0Y2hQYXRofWAsIHRydWUpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgbG9nLndhcm4oXG4gICAgICAgICdUaGUgdXBncmFkZSBwcm9jZXNzIHN1Y2NlZWRlZCBidXQgdGhlcmUgbWlnaHQgYmUgY29uZmxpY3RzIHRvIGJlIHJlc29sdmVkLiAnICtcbiAgICAgICAgJ1NlZSBhYm92ZSBmb3IgdGhlIGxpc3Qgb2YgZmlsZXMgdGhhdCBoYXZlIG1lcmdlIGNvbmZsaWN0cy4nKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgbG9nLmluZm8oJ1VwZ3JhZGUgZG9uZScpO1xuICAgICAgaWYgKGNsaUFyZ3MudmVyYm9zZSkge1xuICAgICAgICBsb2cuaW5mbyhgVGVtcG9yYXJ5IHdvcmtpbmcgZGlyZWN0b3J5OiAke3RtcERpcn1gKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbG9nLmVycm9yKCdBbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgdXBncmFkZTonKTtcbiAgICBsb2cuZXJyb3IoZXJyLnN0YWNrKTtcbiAgICBpZiAocHJvamVjdEJhY2t1cENyZWF0ZWQpIHtcbiAgICAgIGxvZy5lcnJvcignUmVzdG9yZSBpbml0aWFsIHNvdXJjZXMnKTtcbiAgICAgIGF3YWl0IGV4ZWMoJ2dpdCBjaGVja291dCBwcm9qZWN0LXNuYXBzaG90JywgdHJ1ZSk7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBydW46IHJ1bixcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cliEntry.js"
      ],
      "names": [
        "log",
        "info",
        "lastGitUpgradeVersion",
        "exec",
        "current",
        "require",
        "version",
        "latest",
        "semver",
        "clean",
        "gt",
        "warn",
        "err",
        "message",
        "checkForUpdates",
        "requestedVersion",
        "cliArgs",
        "tmpDir",
        "path",
        "resolve",
        "os",
        "tmpdir",
        "generatorDir",
        "process",
        "cwd",
        "projectBackupCreated",
        "useYarn",
        "shouldUseYarn",
        "reactNativeNodeModulesPak",
        "reactNodeModulesPak",
        "pak",
        "readPackageFiles",
        "appName",
        "name",
        "currentVersion",
        "currentReactVersion",
        "declaredVersion",
        "dependencies",
        "declaredReactVersion",
        "react",
        "verbose",
        "checkDeclaredVersion",
        "checkMatchingVersions",
        "checkReactPeerDependency",
        "checkGitAvailable",
        "viewCommand",
        "jsonOutput",
        "newVersion",
        "newReactVersionRange",
        "parseInformationJsonOutput",
        "setupWorkingDir",
        "configureGitEnv",
        "generateTemplates",
        "installCommand",
        "satisfies",
        "diffOutput",
        "patchPath",
        "fs",
        "writeFileSync",
        "error",
        "stack",
        "run",
        "assert",
        "shell",
        "Promise",
        "yeoman",
        "TerminalAdapter",
        "rimraf",
        "yarn",
        "heading",
        "command",
        "logOutput",
        "reject",
        "stderr",
        "stdout",
        "child",
        "async",
        "silent",
        "on",
        "data",
        "write",
        "code",
        "Error",
        "parseJsonFile",
        "installHint",
        "fileContents",
        "readFileSync",
        "JSON",
        "parse",
        "reactNativeNodeModulesPakPath",
        "reactNodeModulesPakPath",
        "pakPath",
        "output",
        "peerDependencies",
        "valid",
        "mkdirSync",
        "env",
        "GIT_DIR",
        "GIT_WORK_TREE",
        "yeomanGeneratorEntryPoint",
        "accessSync",
        "runYeomanGenerators",
        "runCopyAndReplace",
        "copyProjectTemplateAndReplacePath",
        "cache",
        "copyProjectTemplateAndReplace",
        "upgrade",
        "force",
        "prototype",
        "create",
        "createEnv",
        "register",
        "generatorArgs",
        "projectDir",
        "npm",
        "yarnVersion",
        "getYarnVersionIfAvailable",
        "isProjectUsingYarn",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "cliEntry.js",
      "sourceRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst os = require('os');\nconst assert = require('assert');\nconst path = require('path');\nconst shell = require('shelljs');\nconst Promise = require('promise');\nconst yeoman = require('yeoman-environment');\nconst TerminalAdapter = require('yeoman-environment/lib/adapter');\nconst log = require('npmlog');\nconst rimraf = require('rimraf');\nconst semver = require('semver');\nconst yarn = require('./yarn');\n\nconst {\n  checkDeclaredVersion,\n  checkMatchingVersions,\n  checkReactPeerDependency,\n  checkGitAvailable,\n} = require('./checks');\n\nlog.heading = 'git-upgrade';\n\n/**\n * Promisify the callback-based shelljs function exec\n * @param logOutput If true, log the stdout of the command.\n * @returns {Promise}\n */\nfunction exec(command, logOutput) {\n  return new Promise((resolve, reject) => {\n    let stderr, stdout = '';\n    const child = shell.exec(command, {async: true, silent: true});\n\n    child.stdout.on('data', data => {\n      stdout += data;\n      if (logOutput) {\n        process.stdout.write(data);\n      }\n    });\n\n    child.stderr.on('data', data => {\n      stderr += data;\n      process.stderr.write(data);\n    });\n\n    child.on('exit', code => {\n      (code === 0)\n        ? resolve(stdout)\n        : reject(new Error(`Command '${command}' exited with code ${code}:\nstderr: ${stderr}\nstdout: ${stdout}`));\n    });\n  })\n}\n\nfunction parseJsonFile(path, useYarn) {\n  const installHint = useYarn ?\n    'Make sure you ran \"yarn\" and that you are inside a React Native project.' :\n    'Make sure you ran \"npm install\" and that you are inside a React Native project.';\n  let fileContents;\n  try {\n    fileContents = fs.readFileSync(path, 'utf8');\n  } catch (err) {\n    throw new Error('Cannot find \"' + path + '\". ' + installHint);\n  }\n  try {\n    return JSON.parse(fileContents);\n  } catch (err) {\n    throw new Error('Cannot parse \"' + path + '\": ' + err.message);\n  }\n}\n\nfunction readPackageFiles(useYarn) {\n  const reactNativeNodeModulesPakPath = path.resolve(\n    process.cwd(), 'node_modules', 'react-native', 'package.json'\n  );\n  const reactNodeModulesPakPath = path.resolve(\n    process.cwd(), 'node_modules', 'react', 'package.json'\n  );\n  const pakPath = path.resolve(\n    process.cwd(), 'package.json'\n  );\n  return {\n    reactNativeNodeModulesPak: parseJsonFile(reactNativeNodeModulesPakPath),\n    reactNodeModulesPak: parseJsonFile(reactNodeModulesPakPath),\n    pak: parseJsonFile(pakPath)\n  }\n}\n\nfunction parseInformationJsonOutput(jsonOutput, requestedVersion) {\n  try {\n    const output = JSON.parse(jsonOutput);\n    const newVersion = output.version;\n    const peerDependencies = output.peerDependencies;\n    const newReactVersionRange = peerDependencies.react;\n\n    assert(semver.valid(newVersion));\n\n    return {newVersion, newReactVersionRange}\n  } catch (err) {\n    throw new Error(\n      'The specified version of React Native ' + requestedVersion + ' doesn\\'t exist.\\n' +\n      'Re-run the react-native-git-upgrade command with an existing version,\\n' +\n      'for example: \"react-native-git-upgrade 0.38.0\",\\n' +\n      'or without arguments to upgrade to the latest: \"react-native-git-upgrade\".'\n    );\n  }\n}\n\n\nfunction setupWorkingDir(tmpDir) {\n  return new Promise((resolve, reject) => {\n    rimraf(tmpDir, err => {\n      if (err) {\n        reject(err);\n      } else {\n        fs.mkdirSync(tmpDir);\n        resolve();\n      }\n    });\n  });\n}\n\nfunction configureGitEnv(tmpDir) {\n  /*\n   * The workflow inits a temporary Git repository. We don't want to interfere\n   * with an existing user's Git repository.\n   * Thanks to Git env vars, we can make Git use a different directory for its \".git\" folder.\n   * See https://git-scm.com/book/tr/v2/Git-Internals-Environment-Variables\n   */\n  process.env.GIT_DIR = path.resolve(tmpDir, '.gitrn');\n  process.env.GIT_WORK_TREE = '.';\n}\n\nfunction generateTemplates(generatorDir, appName, verbose) {\n  try {\n    const yeomanGeneratorEntryPoint = path.resolve(generatorDir, 'index.js');\n    // Try requiring the index.js (entry-point of Yeoman generators)\n    fs.accessSync(yeomanGeneratorEntryPoint);\n    return runYeomanGenerators(generatorDir, appName, verbose);\n  } catch(err) {\n    return runCopyAndReplace(generatorDir, appName);\n  }\n}\n\nfunction runCopyAndReplace(generatorDir, appName) {\n  const copyProjectTemplateAndReplacePath = path.resolve(generatorDir, 'copyProjectTemplateAndReplace');\n  /*\n   * This module is required twice during the process: for both old and new version\n   * of React Native.\n   * This file could have changed between these 2 versions. When generating the new template,\n   * we don't want to load the old version of the generator from the cache\n   */\n  delete require.cache[require.resolve(copyProjectTemplateAndReplacePath)];\n  const copyProjectTemplateAndReplace = require(copyProjectTemplateAndReplacePath);\n  copyProjectTemplateAndReplace(\n    path.resolve(generatorDir, '..', 'templates', 'HelloWorld'),\n    process.cwd(),\n    appName,\n    {upgrade: true, force: true}\n  );\n}\n\nfunction runYeomanGenerators(generatorDir, appName, verbose) {\n  if (!verbose) {\n    // Yeoman output needs monkey-patching (no silent option)\n    TerminalAdapter.prototype.log = () => {};\n    TerminalAdapter.prototype.log.force = () => {};\n    TerminalAdapter.prototype.log.create = () => {};\n  }\n\n  const env = yeoman.createEnv();\n  env.register(generatorDir, 'react:app');\n  const generatorArgs = ['react:app', appName];\n  return new Promise((resolve) => env.run(generatorArgs, {upgrade: true, force: true}, resolve));\n}\n\n/**\n * If there's a newer version of react-native-git-upgrade in npm, suggest to the user to upgrade.\n */\nasync function checkForUpdates() {\n  try {\n    log.info('Check for updates');\n    const lastGitUpgradeVersion = await exec('npm view react-native-git-upgrade@latest version');\n    const current = require('./package').version;\n    const latest = semver.clean(lastGitUpgradeVersion);\n    if (semver.gt(latest, current)) {\n      log.warn(\n        'A more recent version of \"react-native-git-upgrade\" has been found.\\n' +\n        `Current: ${current}\\n` +\n        `Latest: ${latest}\\n` +\n        'Please run \"npm install -g react-native-git-upgrade\"'\n      );\n    }\n  } catch (err) {\n    log.warn('Check for latest version failed', err.message);\n  }\n}\n\n/**\n * If true, use yarn instead of the npm client to upgrade the project.\n */\nfunction shouldUseYarn(cliArgs, projectDir) {\n  if (cliArgs && cliArgs.npm) {\n    return false;\n  }\n  const yarnVersion = yarn.getYarnVersionIfAvailable();\n  if (yarnVersion && yarn.isProjectUsingYarn(projectDir)) {\n    log.info('Using yarn ' + yarnVersion);\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param requestedVersion The version argument, e.g. 'react-native-git-upgrade 0.38'.\n *                         `undefined` if no argument passed.\n * @param cliArgs Additional arguments parsed using minimist.\n */\nasync function run(requestedVersion, cliArgs) {\n  const tmpDir = path.resolve(os.tmpdir(), 'react-native-git-upgrade');\n  const generatorDir = path.resolve(process.cwd(), 'node_modules', 'react-native', 'local-cli', 'generator');\n  let projectBackupCreated = false;\n\n  try {\n    await checkForUpdates();\n\n    const useYarn = shouldUseYarn(cliArgs, path.resolve(process.cwd()));\n\n    log.info('Read package.json files');\n    const {reactNativeNodeModulesPak, reactNodeModulesPak, pak} = readPackageFiles(useYarn);\n    const appName = pak.name;\n    const currentVersion = reactNativeNodeModulesPak.version;\n    const currentReactVersion = reactNodeModulesPak.version;\n    const declaredVersion = pak.dependencies['react-native'];\n    const declaredReactVersion = pak.dependencies.react;\n\n    const verbose = cliArgs.verbose;\n\n    log.info('Check declared version');\n    checkDeclaredVersion(declaredVersion);\n\n    log.info('Check matching versions');\n    checkMatchingVersions(currentVersion, declaredVersion, useYarn);\n\n    log.info('Check React peer dependency');\n    checkReactPeerDependency(currentVersion, declaredReactVersion);\n\n    log.info('Check that Git is installed');\n    checkGitAvailable();\n\n    log.info('Get information from NPM registry');\n    const viewCommand = 'npm view react-native@' + (requestedVersion || 'latest') + ' --json';\n    const jsonOutput = await exec(viewCommand, verbose);\n    const {newVersion, newReactVersionRange} = parseInformationJsonOutput(jsonOutput, requestedVersion);\n    // Print which versions we're upgrading to\n    log.info('Upgrading to React Native ' + newVersion + (newReactVersionRange ? ', React ' + newReactVersionRange : ''));\n\n    log.info('Setup temporary working directory');\n    await setupWorkingDir(tmpDir);\n\n    log.info('Configure Git environment');\n    configureGitEnv(tmpDir);\n\n    log.info('Init Git repository');\n    await exec('git init', verbose);\n\n    log.info('Add all files to commit');\n    await exec('git add .', verbose);\n\n    log.info('Commit current project sources');\n    await exec('git commit -m \"Project snapshot\"', verbose);\n\n    log.info ('Create a tag before updating sources');\n    await exec('git tag project-snapshot', verbose);\n    projectBackupCreated = true;\n\n    log.info('Generate old version template');\n    await generateTemplates(generatorDir, appName, verbose);\n\n    log.info('Add updated files to commit');\n    await exec('git add .', verbose);\n\n    log.info('Commit old version template');\n    await exec('git commit -m \"Old version\" --allow-empty', verbose);\n\n    log.info('Install the new version');\n    let installCommand;\n    if (useYarn) {\n      installCommand = 'yarn add';\n    } else {\n      installCommand = 'npm install --save --color=always';\n    }\n    installCommand += ' react-native@' + newVersion;\n    if (newReactVersionRange && !semver.satisfies(currentReactVersion, newReactVersionRange)) {\n      // Install React as well to avoid unmet peer dependency\n      installCommand += ' react@' + newReactVersionRange;\n    }\n    await exec(installCommand, verbose);\n\n    log.info('Generate new version template');\n    await generateTemplates(generatorDir, appName, verbose);\n\n    log.info('Add updated files to commit');\n    await exec('git add .', verbose);\n\n    log.info('Commit new version template');\n    await exec('git commit -m \"New version\" --allow-empty', verbose);\n\n    log.info('Generate the patch between the 2 versions');\n    const diffOutput = await exec('git diff --binary --no-color HEAD~1 HEAD', verbose);\n\n    log.info('Save the patch in temp directory');\n    const patchPath = path.resolve(tmpDir, `upgrade_${currentVersion}_${newVersion}.patch`);\n    fs.writeFileSync(patchPath, diffOutput);\n\n    log.info('Reset the 2 temporary commits');\n    await exec('git reset HEAD~2 --hard', verbose);\n\n    try {\n      log.info('Apply the patch');\n      await exec(`git apply --3way ${patchPath}`, true);\n    } catch (err) {\n      log.warn(\n        'The upgrade process succeeded but there might be conflicts to be resolved. ' +\n        'See above for the list of files that have merge conflicts.');\n    } finally {\n      log.info('Upgrade done');\n      if (cliArgs.verbose) {\n        log.info(`Temporary working directory: ${tmpDir}`);\n      }\n    }\n\n  } catch (err) {\n    log.error('An error occurred during upgrade:');\n    log.error(err.stack);\n    if (projectBackupCreated) {\n      log.error('Restore initial sources');\n      await exec('git checkout project-snapshot', true);\n    }\n  }\n}\n\nmodule.exports = {\n  run: run,\n};\n"
      ]
    },
    "mtime": 1487587625000
  },
  "{\"filename\":\"C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/yarn.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/yarn.js",
      "filenameRelative": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/yarn.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "yarn.js",
      "sourceFileName": "yarn.js",
      "sourceRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "yarn"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst path = require('path');\nconst semver = require('semver');\n\n/**\n * Use Yarn if available, it's much faster than the npm client.\n * Return the version of yarn installed on the system, null if yarn is not available.\n */\nfunction getYarnVersionIfAvailable() {\n  let yarnVersion;\n  try {\n    // execSync returns a Buffer -> convert to string\n    if (process.platform.startsWith('win')) {\n      yarnVersion = (execSync('yarn --version').toString() || '').trim();\n    } else {\n      yarnVersion = (execSync('yarn --version 2>/dev/null').toString() || '').trim();\n    }\n  } catch (error) {\n    return null;\n  }\n  // yarn < 0.16 has a 'missing manifest' bug\n  try {\n    if (semver.gte(yarnVersion, '0.16.0')) {\n      return yarnVersion;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error('Cannot parse yarn version: ' + yarnVersion);\n    return null;\n  }\n}\n\n/**\n * Check that 'react-native init' itself used yarn to install React Native.\n * When using an old global react-native-cli@1.0.0 (or older), we don't want\n * to install React Native with npm, and React + Jest with yarn.\n * Let's be safe and not mix yarn and npm in a single project.\n * @param projectDir e.g. /Users/martin/AwesomeApp\n */\nfunction isProjectUsingYarn(projectDir) {\n  return fs.existsSync(path.join(projectDir, 'yarn.lock'));\n}\n\nmodule.exports = {\n  getYarnVersionIfAvailable: getYarnVersionIfAvailable,\n  isProjectUsingYarn: isProjectUsingYarn\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlhcm4uanMiXSwibmFtZXMiOlsiZXhlY1N5bmMiLCJyZXF1aXJlIiwiZnMiLCJwYXRoIiwic2VtdmVyIiwiZ2V0WWFyblZlcnNpb25JZkF2YWlsYWJsZSIsInlhcm5WZXJzaW9uIiwicHJvY2VzcyIsInBsYXRmb3JtIiwic3RhcnRzV2l0aCIsInRvU3RyaW5nIiwidHJpbSIsImVycm9yIiwiZ3RlIiwiY29uc29sZSIsImlzUHJvamVjdFVzaW5nWWFybiIsInByb2plY3REaXIiLCJleGlzdHNTeW5jIiwiam9pbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLFdBQVdDLFFBQVEsZUFBUixFQUF5QkQsUUFBMUM7QUFDQSxNQUFNRSxLQUFLRCxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1FLE9BQU9GLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUcsU0FBU0gsUUFBUSxRQUFSLENBQWY7O0FBRUE7Ozs7QUFJQSxTQUFTSSx5QkFBVCxHQUFxQztBQUNuQyxNQUFJQyxXQUFKO0FBQ0EsTUFBSTtBQUNGO0FBQ0EsUUFBSUMsUUFBUUMsUUFBUixDQUFpQkMsVUFBakIsQ0FBNEIsS0FBNUIsQ0FBSixFQUF3QztBQUN0Q0gsb0JBQWMsQ0FBQ04sU0FBUyxnQkFBVCxFQUEyQlUsUUFBM0IsTUFBeUMsRUFBMUMsRUFBOENDLElBQTlDLEVBQWQ7QUFDRCxLQUZELE1BRU87QUFDTEwsb0JBQWMsQ0FBQ04sU0FBUyw0QkFBVCxFQUF1Q1UsUUFBdkMsTUFBcUQsRUFBdEQsRUFBMERDLElBQTFELEVBQWQ7QUFDRDtBQUNGLEdBUEQsQ0FPRSxPQUFPQyxLQUFQLEVBQWM7QUFDZCxXQUFPLElBQVA7QUFDRDtBQUNEO0FBQ0EsTUFBSTtBQUNGLFFBQUlSLE9BQU9TLEdBQVAsQ0FBV1AsV0FBWCxFQUF3QixRQUF4QixDQUFKLEVBQXVDO0FBQ3JDLGFBQU9BLFdBQVA7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPLElBQVA7QUFDRDtBQUNGLEdBTkQsQ0FNRSxPQUFPTSxLQUFQLEVBQWM7QUFDZEUsWUFBUUYsS0FBUixDQUFjLGdDQUFnQ04sV0FBOUM7QUFDQSxXQUFPLElBQVA7QUFDRDtBQUNGOztBQUVEOzs7Ozs7O0FBT0EsU0FBU1Msa0JBQVQsQ0FBNEJDLFVBQTVCLEVBQXdDO0FBQ3RDLFNBQU9kLEdBQUdlLFVBQUgsQ0FBY2QsS0FBS2UsSUFBTCxDQUFVRixVQUFWLEVBQXNCLFdBQXRCLENBQWQsQ0FBUDtBQUNEOztBQUVERyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZmLDZCQUEyQkEseUJBRFo7QUFFZlUsc0JBQW9CQTtBQUZMLENBQWpCIiwiZmlsZSI6Inlhcm4uanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvZGpqdy9BcHBEYXRhL1JvYW1pbmcvbnBtL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUtZ2l0LXVwZ3JhZGUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgZXhlY1N5bmMgPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlY1N5bmM7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3Qgc2VtdmVyID0gcmVxdWlyZSgnc2VtdmVyJyk7XG5cbi8qKlxuICogVXNlIFlhcm4gaWYgYXZhaWxhYmxlLCBpdCdzIG11Y2ggZmFzdGVyIHRoYW4gdGhlIG5wbSBjbGllbnQuXG4gKiBSZXR1cm4gdGhlIHZlcnNpb24gb2YgeWFybiBpbnN0YWxsZWQgb24gdGhlIHN5c3RlbSwgbnVsbCBpZiB5YXJuIGlzIG5vdCBhdmFpbGFibGUuXG4gKi9cbmZ1bmN0aW9uIGdldFlhcm5WZXJzaW9uSWZBdmFpbGFibGUoKSB7XG4gIGxldCB5YXJuVmVyc2lvbjtcbiAgdHJ5IHtcbiAgICAvLyBleGVjU3luYyByZXR1cm5zIGEgQnVmZmVyIC0+IGNvbnZlcnQgdG8gc3RyaW5nXG4gICAgaWYgKHByb2Nlc3MucGxhdGZvcm0uc3RhcnRzV2l0aCgnd2luJykpIHtcbiAgICAgIHlhcm5WZXJzaW9uID0gKGV4ZWNTeW5jKCd5YXJuIC0tdmVyc2lvbicpLnRvU3RyaW5nKCkgfHwgJycpLnRyaW0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgeWFyblZlcnNpb24gPSAoZXhlY1N5bmMoJ3lhcm4gLS12ZXJzaW9uIDI+L2Rldi9udWxsJykudG9TdHJpbmcoKSB8fCAnJykudHJpbSgpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAvLyB5YXJuIDwgMC4xNiBoYXMgYSAnbWlzc2luZyBtYW5pZmVzdCcgYnVnXG4gIHRyeSB7XG4gICAgaWYgKHNlbXZlci5ndGUoeWFyblZlcnNpb24sICcwLjE2LjAnKSkge1xuICAgICAgcmV0dXJuIHlhcm5WZXJzaW9uO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQ2Fubm90IHBhcnNlIHlhcm4gdmVyc2lvbjogJyArIHlhcm5WZXJzaW9uKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG4vKipcbiAqIENoZWNrIHRoYXQgJ3JlYWN0LW5hdGl2ZSBpbml0JyBpdHNlbGYgdXNlZCB5YXJuIHRvIGluc3RhbGwgUmVhY3QgTmF0aXZlLlxuICogV2hlbiB1c2luZyBhbiBvbGQgZ2xvYmFsIHJlYWN0LW5hdGl2ZS1jbGlAMS4wLjAgKG9yIG9sZGVyKSwgd2UgZG9uJ3Qgd2FudFxuICogdG8gaW5zdGFsbCBSZWFjdCBOYXRpdmUgd2l0aCBucG0sIGFuZCBSZWFjdCArIEplc3Qgd2l0aCB5YXJuLlxuICogTGV0J3MgYmUgc2FmZSBhbmQgbm90IG1peCB5YXJuIGFuZCBucG0gaW4gYSBzaW5nbGUgcHJvamVjdC5cbiAqIEBwYXJhbSBwcm9qZWN0RGlyIGUuZy4gL1VzZXJzL21hcnRpbi9Bd2Vzb21lQXBwXG4gKi9cbmZ1bmN0aW9uIGlzUHJvamVjdFVzaW5nWWFybihwcm9qZWN0RGlyKSB7XG4gIHJldHVybiBmcy5leGlzdHNTeW5jKHBhdGguam9pbihwcm9qZWN0RGlyLCAneWFybi5sb2NrJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0WWFyblZlcnNpb25JZkF2YWlsYWJsZTogZ2V0WWFyblZlcnNpb25JZkF2YWlsYWJsZSxcbiAgaXNQcm9qZWN0VXNpbmdZYXJuOiBpc1Byb2plY3RVc2luZ1lhcm4sXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "yarn.js"
      ],
      "names": [
        "execSync",
        "require",
        "fs",
        "path",
        "semver",
        "getYarnVersionIfAvailable",
        "yarnVersion",
        "process",
        "platform",
        "startsWith",
        "toString",
        "trim",
        "error",
        "gte",
        "console",
        "isProjectUsingYarn",
        "projectDir",
        "existsSync",
        "join",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,WAAWC,QAAQ,eAAR,EAAyBD,QAA1C;AACA,MAAME,KAAKD,QAAQ,IAAR,CAAX;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAMG,SAASH,QAAQ,QAAR,CAAf;;AAEA;;;;AAIA,SAASI,yBAAT,GAAqC;AACnC,MAAIC,WAAJ;AACA,MAAI;AACF;AACA,QAAIC,QAAQC,QAAR,CAAiBC,UAAjB,CAA4B,KAA5B,CAAJ,EAAwC;AACtCH,oBAAc,CAACN,SAAS,gBAAT,EAA2BU,QAA3B,MAAyC,EAA1C,EAA8CC,IAA9C,EAAd;AACD,KAFD,MAEO;AACLL,oBAAc,CAACN,SAAS,4BAAT,EAAuCU,QAAvC,MAAqD,EAAtD,EAA0DC,IAA1D,EAAd;AACD;AACF,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACD;AACA,MAAI;AACF,QAAIR,OAAOS,GAAP,CAAWP,WAAX,EAAwB,QAAxB,CAAJ,EAAuC;AACrC,aAAOA,WAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF,GAND,CAME,OAAOM,KAAP,EAAc;AACdE,YAAQF,KAAR,CAAc,gCAAgCN,WAA9C;AACA,WAAO,IAAP;AACD;AACF;;AAED;;;;;;;AAOA,SAASS,kBAAT,CAA4BC,UAA5B,EAAwC;AACtC,SAAOd,GAAGe,UAAH,CAAcd,KAAKe,IAAL,CAAUF,UAAV,EAAsB,WAAtB,CAAd,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB;AACff,6BAA2BA,yBADZ;AAEfU,sBAAoBA;AAFL,CAAjB",
      "file": "yarn.js",
      "sourceRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst path = require('path');\nconst semver = require('semver');\n\n/**\n * Use Yarn if available, it's much faster than the npm client.\n * Return the version of yarn installed on the system, null if yarn is not available.\n */\nfunction getYarnVersionIfAvailable() {\n  let yarnVersion;\n  try {\n    // execSync returns a Buffer -> convert to string\n    if (process.platform.startsWith('win')) {\n      yarnVersion = (execSync('yarn --version').toString() || '').trim();\n    } else {\n      yarnVersion = (execSync('yarn --version 2>/dev/null').toString() || '').trim();\n    }\n  } catch (error) {\n    return null;\n  }\n  // yarn < 0.16 has a 'missing manifest' bug\n  try {\n    if (semver.gte(yarnVersion, '0.16.0')) {\n      return yarnVersion;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error('Cannot parse yarn version: ' + yarnVersion);\n    return null;\n  }\n}\n\n/**\n * Check that 'react-native init' itself used yarn to install React Native.\n * When using an old global react-native-cli@1.0.0 (or older), we don't want\n * to install React Native with npm, and React + Jest with yarn.\n * Let's be safe and not mix yarn and npm in a single project.\n * @param projectDir e.g. /Users/martin/AwesomeApp\n */\nfunction isProjectUsingYarn(projectDir) {\n  return fs.existsSync(path.join(projectDir, 'yarn.lock'));\n}\n\nmodule.exports = {\n  getYarnVersionIfAvailable: getYarnVersionIfAvailable,\n  isProjectUsingYarn: isProjectUsingYarn,\n};\n"
      ]
    },
    "mtime": 1480973802000
  },
  "{\"filename\":\"C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/checks.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/checks.js",
      "filenameRelative": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade/checks.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "checks.js",
      "sourceFileName": "checks.js",
      "sourceRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "checks"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst { execSync } = require('child_process');\nconst semver = require('semver');\n\nfunction checkDeclaredVersion(declaredVersion) {\n  if (!declaredVersion) {\n    throw new Error('Your \"package.json\" file doesn\\'t seem to have \"react-native\" as a dependency.');\n  }\n}\n\nfunction checkMatchingVersions(currentVersion, declaredVersion, useYarn) {\n  if (!semver.satisfies(currentVersion, declaredVersion)) {\n    throw new Error('react-native version in \"package.json\" (' + declaredVersion + ') doesn\\'t match ' + 'the installed version in \"node_modules\" (' + currentVersion + ').\\n' + (useYarn ? 'Try running \"yarn\" to fix this.' : 'Try running \"npm install\" to fix this.'));\n  }\n}\n\nfunction checkReactPeerDependency(currentVersion, declaredReactVersion) {\n  if (semver.lt(currentVersion, '0.21.0') && !declaredReactVersion) {\n    throw new Error('Your \"package.json\" file doesn\\'t seem to have \"react\" as a dependency.\\n' + '\"react\" was changed from a dependency to a peer dependency in react-native v0.21.0.\\n' + 'Therefore, it\\'s necessary to include \"react\" in your project\\'s dependencies.\\n' + 'Please run \"npm install --save react\", then re-run ' + '\"react-native upgrade\".');\n  }\n}\n\nfunction checkGitAvailable() {\n  try {\n    execSync('git --version');\n  } catch (error) {\n    throw new Error('\"react-native-git-upgrade\" requires \"git\" to be available in path. ' + 'Please install Git (https://git-scm.com)\"');\n  }\n}\n\nmodule.exports = {\n  checkDeclaredVersion,\n  checkMatchingVersions,\n  checkReactPeerDependency,\n  checkGitAvailable\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrcy5qcyJdLCJuYW1lcyI6WyJleGVjU3luYyIsInJlcXVpcmUiLCJzZW12ZXIiLCJjaGVja0RlY2xhcmVkVmVyc2lvbiIsImRlY2xhcmVkVmVyc2lvbiIsIkVycm9yIiwiY2hlY2tNYXRjaGluZ1ZlcnNpb25zIiwiY3VycmVudFZlcnNpb24iLCJ1c2VZYXJuIiwic2F0aXNmaWVzIiwiY2hlY2tSZWFjdFBlZXJEZXBlbmRlbmN5IiwiZGVjbGFyZWRSZWFjdFZlcnNpb24iLCJsdCIsImNoZWNrR2l0QXZhaWxhYmxlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNLEVBQUNBLFFBQUQsS0FBYUMsUUFBUSxlQUFSLENBQW5CO0FBQ0EsTUFBTUMsU0FBU0QsUUFBUSxRQUFSLENBQWY7O0FBRUEsU0FBU0Usb0JBQVQsQ0FBOEJDLGVBQTlCLEVBQStDO0FBQzdDLE1BQUksQ0FBQ0EsZUFBTCxFQUFzQjtBQUNwQixVQUFNLElBQUlDLEtBQUosQ0FDSixnRkFESSxDQUFOO0FBR0Q7QUFDRjs7QUFFRCxTQUFTQyxxQkFBVCxDQUErQkMsY0FBL0IsRUFBK0NILGVBQS9DLEVBQWdFSSxPQUFoRSxFQUF5RTtBQUN2RSxNQUFJLENBQUNOLE9BQU9PLFNBQVAsQ0FBaUJGLGNBQWpCLEVBQWlDSCxlQUFqQyxDQUFMLEVBQXdEO0FBQ3RELFVBQU0sSUFBSUMsS0FBSixDQUNKLDZDQUE2Q0QsZUFBN0MsR0FBK0QsbUJBQS9ELEdBQ0EsMkNBREEsR0FDOENHLGNBRDlDLEdBQytELE1BRC9ELElBRUNDLFVBQ0MsaUNBREQsR0FFQyx3Q0FKRixDQURJLENBQU47QUFPRDtBQUNGOztBQUVELFNBQVNFLHdCQUFULENBQWtDSCxjQUFsQyxFQUFrREksb0JBQWxELEVBQXdFO0FBQ3RFLE1BQUlULE9BQU9VLEVBQVAsQ0FBVUwsY0FBVixFQUEwQixRQUExQixLQUF1QyxDQUFDSSxvQkFBNUMsRUFBa0U7QUFDaEUsVUFBTSxJQUFJTixLQUFKLENBQ0osOEVBQ0EsdUZBREEsR0FFQSxrRkFGQSxHQUdBLHFEQUhBLEdBSUEseUJBTEksQ0FBTjtBQU9EO0FBQ0Y7O0FBRUQsU0FBU1EsaUJBQVQsR0FBNkI7QUFDM0IsTUFBSTtBQUNGYixhQUFTLGVBQVQ7QUFDRCxHQUZELENBRUUsT0FBT2MsS0FBUCxFQUFjO0FBQ2QsVUFBTSxJQUFJVCxLQUFKLENBQ0osd0VBQ0EsMkNBRkksQ0FBTjtBQUlEO0FBQ0Y7O0FBRURVLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmIsc0JBRGU7QUFFZkcsdUJBRmU7QUFHZkksMEJBSGU7QUFJZkc7QUFKZSxDQUFqQiIsImZpbGUiOiJjaGVja3MuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvZGpqdy9BcHBEYXRhL1JvYW1pbmcvbnBtL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUtZ2l0LXVwZ3JhZGUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3Qge2V4ZWNTeW5jfSA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKTtcbmNvbnN0IHNlbXZlciA9IHJlcXVpcmUoJ3NlbXZlcicpO1xuXG5mdW5jdGlvbiBjaGVja0RlY2xhcmVkVmVyc2lvbihkZWNsYXJlZFZlcnNpb24pIHtcbiAgaWYgKCFkZWNsYXJlZFZlcnNpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnWW91ciBcInBhY2thZ2UuanNvblwiIGZpbGUgZG9lc25cXCd0IHNlZW0gdG8gaGF2ZSBcInJlYWN0LW5hdGl2ZVwiIGFzIGEgZGVwZW5kZW5jeS4nXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja01hdGNoaW5nVmVyc2lvbnMoY3VycmVudFZlcnNpb24sIGRlY2xhcmVkVmVyc2lvbiwgdXNlWWFybikge1xuICBpZiAoIXNlbXZlci5zYXRpc2ZpZXMoY3VycmVudFZlcnNpb24sIGRlY2xhcmVkVmVyc2lvbikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAncmVhY3QtbmF0aXZlIHZlcnNpb24gaW4gXCJwYWNrYWdlLmpzb25cIiAoJyArIGRlY2xhcmVkVmVyc2lvbiArICcpIGRvZXNuXFwndCBtYXRjaCAnICtcbiAgICAgICd0aGUgaW5zdGFsbGVkIHZlcnNpb24gaW4gXCJub2RlX21vZHVsZXNcIiAoJyArIGN1cnJlbnRWZXJzaW9uICsgJykuXFxuJyArXG4gICAgICAodXNlWWFybiA/XG4gICAgICAgICdUcnkgcnVubmluZyBcInlhcm5cIiB0byBmaXggdGhpcy4nIDpcbiAgICAgICAgJ1RyeSBydW5uaW5nIFwibnBtIGluc3RhbGxcIiB0byBmaXggdGhpcy4nKVxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tSZWFjdFBlZXJEZXBlbmRlbmN5KGN1cnJlbnRWZXJzaW9uLCBkZWNsYXJlZFJlYWN0VmVyc2lvbikge1xuICBpZiAoc2VtdmVyLmx0KGN1cnJlbnRWZXJzaW9uLCAnMC4yMS4wJykgJiYgIWRlY2xhcmVkUmVhY3RWZXJzaW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ1lvdXIgXCJwYWNrYWdlLmpzb25cIiBmaWxlIGRvZXNuXFwndCBzZWVtIHRvIGhhdmUgXCJyZWFjdFwiIGFzIGEgZGVwZW5kZW5jeS5cXG4nICtcbiAgICAgICdcInJlYWN0XCIgd2FzIGNoYW5nZWQgZnJvbSBhIGRlcGVuZGVuY3kgdG8gYSBwZWVyIGRlcGVuZGVuY3kgaW4gcmVhY3QtbmF0aXZlIHYwLjIxLjAuXFxuJyArXG4gICAgICAnVGhlcmVmb3JlLCBpdFxcJ3MgbmVjZXNzYXJ5IHRvIGluY2x1ZGUgXCJyZWFjdFwiIGluIHlvdXIgcHJvamVjdFxcJ3MgZGVwZW5kZW5jaWVzLlxcbicgK1xuICAgICAgJ1BsZWFzZSBydW4gXCJucG0gaW5zdGFsbCAtLXNhdmUgcmVhY3RcIiwgdGhlbiByZS1ydW4gJyArXG4gICAgICAnXCJyZWFjdC1uYXRpdmUgdXBncmFkZVwiLidcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrR2l0QXZhaWxhYmxlKCkge1xuICB0cnkge1xuICAgIGV4ZWNTeW5jKCdnaXQgLS12ZXJzaW9uJyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ1wicmVhY3QtbmF0aXZlLWdpdC11cGdyYWRlXCIgcmVxdWlyZXMgXCJnaXRcIiB0byBiZSBhdmFpbGFibGUgaW4gcGF0aC4gJyArXG4gICAgICAnUGxlYXNlIGluc3RhbGwgR2l0IChodHRwczovL2dpdC1zY20uY29tKVwiJ1xuICAgICk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNoZWNrRGVjbGFyZWRWZXJzaW9uLFxuICBjaGVja01hdGNoaW5nVmVyc2lvbnMsXG4gIGNoZWNrUmVhY3RQZWVyRGVwZW5kZW5jeSxcbiAgY2hlY2tHaXRBdmFpbGFibGUsXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "checks.js"
      ],
      "names": [
        "execSync",
        "require",
        "semver",
        "checkDeclaredVersion",
        "declaredVersion",
        "Error",
        "checkMatchingVersions",
        "currentVersion",
        "useYarn",
        "satisfies",
        "checkReactPeerDependency",
        "declaredReactVersion",
        "lt",
        "checkGitAvailable",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAM,EAACA,QAAD,KAAaC,QAAQ,eAAR,CAAnB;AACA,MAAMC,SAASD,QAAQ,QAAR,CAAf;;AAEA,SAASE,oBAAT,CAA8BC,eAA9B,EAA+C;AAC7C,MAAI,CAACA,eAAL,EAAsB;AACpB,UAAM,IAAIC,KAAJ,CACJ,gFADI,CAAN;AAGD;AACF;;AAED,SAASC,qBAAT,CAA+BC,cAA/B,EAA+CH,eAA/C,EAAgEI,OAAhE,EAAyE;AACvE,MAAI,CAACN,OAAOO,SAAP,CAAiBF,cAAjB,EAAiCH,eAAjC,CAAL,EAAwD;AACtD,UAAM,IAAIC,KAAJ,CACJ,6CAA6CD,eAA7C,GAA+D,mBAA/D,GACA,2CADA,GAC8CG,cAD9C,GAC+D,MAD/D,IAECC,UACC,iCADD,GAEC,wCAJF,CADI,CAAN;AAOD;AACF;;AAED,SAASE,wBAAT,CAAkCH,cAAlC,EAAkDI,oBAAlD,EAAwE;AACtE,MAAIT,OAAOU,EAAP,CAAUL,cAAV,EAA0B,QAA1B,KAAuC,CAACI,oBAA5C,EAAkE;AAChE,UAAM,IAAIN,KAAJ,CACJ,8EACA,uFADA,GAEA,kFAFA,GAGA,qDAHA,GAIA,yBALI,CAAN;AAOD;AACF;;AAED,SAASQ,iBAAT,GAA6B;AAC3B,MAAI;AACFb,aAAS,eAAT;AACD,GAFD,CAEE,OAAOc,KAAP,EAAc;AACd,UAAM,IAAIT,KAAJ,CACJ,wEACA,2CAFI,CAAN;AAID;AACF;;AAEDU,OAAOC,OAAP,GAAiB;AACfb,sBADe;AAEfG,uBAFe;AAGfI,0BAHe;AAIfG;AAJe,CAAjB",
      "file": "checks.js",
      "sourceRoot": "C:/Users/djjw/AppData/Roaming/npm/node_modules/react-native-git-upgrade",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst {execSync} = require('child_process');\nconst semver = require('semver');\n\nfunction checkDeclaredVersion(declaredVersion) {\n  if (!declaredVersion) {\n    throw new Error(\n      'Your \"package.json\" file doesn\\'t seem to have \"react-native\" as a dependency.'\n    );\n  }\n}\n\nfunction checkMatchingVersions(currentVersion, declaredVersion, useYarn) {\n  if (!semver.satisfies(currentVersion, declaredVersion)) {\n    throw new Error(\n      'react-native version in \"package.json\" (' + declaredVersion + ') doesn\\'t match ' +\n      'the installed version in \"node_modules\" (' + currentVersion + ').\\n' +\n      (useYarn ?\n        'Try running \"yarn\" to fix this.' :\n        'Try running \"npm install\" to fix this.')\n    );\n  }\n}\n\nfunction checkReactPeerDependency(currentVersion, declaredReactVersion) {\n  if (semver.lt(currentVersion, '0.21.0') && !declaredReactVersion) {\n    throw new Error(\n      'Your \"package.json\" file doesn\\'t seem to have \"react\" as a dependency.\\n' +\n      '\"react\" was changed from a dependency to a peer dependency in react-native v0.21.0.\\n' +\n      'Therefore, it\\'s necessary to include \"react\" in your project\\'s dependencies.\\n' +\n      'Please run \"npm install --save react\", then re-run ' +\n      '\"react-native upgrade\".'\n    );\n  }\n}\n\nfunction checkGitAvailable() {\n  try {\n    execSync('git --version');\n  } catch (error) {\n    throw new Error(\n      '\"react-native-git-upgrade\" requires \"git\" to be available in path. ' +\n      'Please install Git (https://git-scm.com)\"'\n    );\n  }\n}\n\nmodule.exports = {\n  checkDeclaredVersion,\n  checkMatchingVersions,\n  checkReactPeerDependency,\n  checkGitAvailable,\n};\n"
      ]
    },
    "mtime": 1480973731000
  }
}